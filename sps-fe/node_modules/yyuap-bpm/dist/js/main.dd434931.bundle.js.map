{"version":3,"sources":["webpack:///./src/BpmCopyContent.js","webpack:///./src/BpmTable.js","webpack:///./src/BpmFlowChart.js","webpack:///./src/BpmTaskApproval.js","webpack:///./src/BpmTaskCopyPanel.js","webpack:///./src/app.js","webpack:///./src/demo.js","webpack:///./src/index.js","webpack:///./src/common.js","webpack:///./src/refOptions.js","webpack:///./src/BpmTestCheckTable.js","webpack:///./src/BpmWrap.js","webpack:///./src/BpmTaskApprovalWrap.js","webpack:///./src/BpmButtonSubmit.js","webpack:///./src/BpmButtonRecall.js","webpack:///./src/BpmLinkAssign.js"],"names":["__webpack_require__","_react","_tinperBee","propTypes","className","PropTypes","string","filterRefUrl","organrefCode","positonrefCode","roleRef","userRef","onCopyusersChange","func","onintersectionChange","BpmCopyContent","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","_getPrototypeOf2","default","call","changeCheck","props","setState","intersection","state","childRefKey","userIds","processDefineCode","assignInfo","assignInfoItems","obj","huanjieShow","huanjieList","chaosongShow","editRowIndex","showVal","copyusers","copyuserShowVal","Component","self","labelStyle","height","lineHeight","width","padding","display","refcon","organRef","title","backdrop","hasPage","multiple","refType","isRadio","param","refCode","tenantId","sysId","transmitParam","keyList","onSave","sels","temp","map","v","id","slice","_from2","x","type","showKey","verification","positonRef","_react2","createElement","Row","Label","style","_refWithInput2","disabled","option","_assign2","JSON","parse","refOptions","marginTop","marginBottom","Checkbox","margin","checked","onChange","defaultProps","_common","processDefinitionId","processInstanceId","BpmTable","_this2","componentDidMount","_asyncToGenerator","_regenerator2","mark","_callee","_this$props","hisTasklistData","wrap","_context","prev","next","sendBpmTaskAJAX","sent","data","stop","columns","dataIndex","key","render","text","record","index","descriptionToText","timestampToDate","Table","bordered","emptyText","url","BpmFlowChart","_props","minHeight","src","frameBorder","appType","properties","object","onBpmFlowClick","onStart","onEnd","onSuccess","onError","onChangestate","BpmTaskApproval","componentWillMount","approvetype","comment","approvetypeToText","handleChange","value","userName","userId","handlerCommentChange","e","target","activityModalClose","rejectToActivityShow","rejectlist","selectedRow","rejectToActivityOK","rejectToBillMakerMsg","activityId","taskId","catch","Message","create","content","toString","color","position","msg","flag","handlerFlow","getDataSource","arr","_this$props$propertie","addsignAble","rejectAble","delegateAble","unagreeable","push","rejectToActivity","_callee2","result","_context2","length","Array","activityName","HuoDongID","HuoDongName","rejectToActivityCol","_this3","Col","md","xs","sm","paddingLeft","paddingRight","Select","placeholder","defaultValue","FormControl","readOnly","onClick","mdOffset","xsOffset","smOffset","textAlign","Button","colors","outline","resize","border","borderRadius","Radio","RadioGroup","name","selectedValue","Modal","show","onHide","Header","closeButton","Title","Body","rowKey","r","rowClassName","indent","onRowClick","Footer","marginRight","addSignAble","iscopytouser","assignAble","panelOpen","bool","reset","BpmTaskCopyPanel","open","Panel","borderBottom","header","float","fontSize","_classnames2","uf","uf-arrow-down","uf-arrow-right","collapsible","expanded","searchOpen","_BpmCopyContent2","_extends","selectResult","ReactDOM","_demo2","document","querySelector","_index","Demo","BpmTaskApprovalWrap","console","log","err","BpmLinkAssign","BpmTestCheckTable","BpmButtonSubmit","funccode","nodekey","size","isOne","urlAssignSubmit","checkedArray","code","ly_code","ly_sm","zr_dw","zr_dw_name","zrr","xb_dw","xb_dw_name","xbr","begin_date","end_date","zy_cd","qt_ld","zbr","zbr_name","dbr","jfyq","db_info","jd_bl","rwpf","kpi_flag","kpi_level","create_name","create_name_name","create_time","update_name","update_name_name","update_time","unitid","unitid_name","id_ygdemo_yw_sub","metaDefinedName","namespace","status","changedPropertyNames","tenant_id","dr","ts","shape","BpmButtonRecall","createTime","createUser","lastModified","lastModifyUser","bpmState","taskKey","orderCode","orderName","supplier","supplierName","purchasing","purchasingGroup","voucherDate","approvalState","confirmState","closeState","type_name","approvalState_name","confirmState_name","closeState_name","remark","bpmBillCode","BpmWrap","_stamp","formatStr","arguments","undefined","unixTimestamp","Date","str","replace","getFullYear","getYear","month","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","vApproveType","getBpmTaskURL","root","axios","post","participants","billidToIds","billId","queryBpmTemplateAllocate","get","Math","random","params","onCommit","_axios2","method","onRecall","reconvert","$0","String","fromCharCode","parseInt","escape","refModelUrl","TreeUrl","TableBodyUrl","TableBarUrl","onCancel","p","filterKey","textOption","modalTitle","leftTitle","rightTitle","leftTransferText","rightTransferText","leftInfo","rightInfo","_stringify2","hisTasklist","draw","order","search","search_EQ_code","processDefinitionName","billno","searchconfirm","isArray","factoryValue","location","hash","pID","_pID$data","_BpmFlowChart2","_BpmTable2","_pID$data$currentActi","message","isShowFlowBtn","currentActivity","handlerSubmitBtn","_callee3","options","_this$state","signAddMsg","delegateMsg","res","_context3","abrupt","t0","assignList","_ref3","agreeeMsg","_x","_x2","apply","_yyuapRef2","s","_BpmTaskApproval2","_BpmTaskCopyPanel2","array","scrollY","number","handlerBtn","_ref2","_ref2$data","success","detailMsg","commitParam","_result","_result2","res_code","submitArray","assignedActivities","closeHuanjie","signAddOK","sourseArray","huanjieHandlerOK","_this$props2","concat","huanjieCol","_showVal","_childRefKey","children","enforceFocus","scroll","y","recallArray","loading"],"mappings":"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","file":"js/main.dd434931.bundle.js","sourcesContent":["/**\n * bpm 提交流程按钮\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table ,Row,Label,Checkbox } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport refOptions from './refOptions';\nconst propTypes = {\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    organrefCode:PropTypes.string,\n    positonrefCode:PropTypes.string,\n    roleRef:PropTypes.string,\n    userRef:PropTypes.string,\n    onCopyusersChange: PropTypes.func,\n    onintersectionChange: PropTypes.func\n};\n\nclass BpmCopyContent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: [],//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [],\n            chaosongShow:false,//抄送显示\n            editRowIndex: 0,\n            showVal: [],\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true  //是否交集\n        }\n    }\n    changeCheck=()=> {\n        let {onintersectionChange} = this.props;\n        this.setState({intersection:!this.state.intersection},()=>{\n            onintersectionChange&&onintersectionChange(this.state.intersection);\n        });\n    }\n    render() {\n        let self = this;\n        const labelStyle={\n            \"height\": \"30px\",\n            \"lineHeight\": \"30px\",\n            \"width\": \"10%\",\n            \"padding\": \"15px\",\n            \"display\":\"inline\"\n        }\n        const refcon={\n            \"display\": \"inline-block\",\n            \"width\": \"36%\"\n        }\n        let organRef ={\n            title: '抄送部门选择',\n            backdrop: false,\n            hasPage: true,\n            multiple:true,\n            refType: 1,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.organrefCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[0]?self.state.copyusers[0]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[0] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[0]=Array.from(temp, x => ({ id: x ,type:`DEPTS`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[0],\n            showKey: 'refname',\n            verification: false\n        }\n        let positonRef ={\n            title: '抄送岗位选择',\n            backdrop: false,\n            hasPage: true,\n            multiple:true,\n            refType: 1,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.positonrefCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[1]?self.state.copyusers[1]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[1] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[1] = Array.from(temp, x => ({ id: x ,type:`POSTS`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[1],\n            showKey: 'refname',\n            verification: false\n        }\n        let roleRef={\n            title: '抄送角色选择',\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.roleRef,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[2]?self.state.copyusers[2]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[2] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[2] = Array.from(temp, x => ({ id: x ,type:`USERGROUP`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[2],\n            showKey: 'refname',\n            verification: false\n        }\n        let userRef ={\n            title: '抄送人员选择',\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.refCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[3]?self.state.copyusers[3]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[3] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[3] = Array.from(temp, x => ({ id: x ,type:`USER`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[3],\n            showKey: 'refname',\n            verification: false\n        }\n        return (<div>\n                    <Row>\n                        <Label style={labelStyle} className={`refLabel`}>按部门:</Label>\n                        <div style={refcon}>\n                            <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions),organRef)} />\n                        </div>\n                        <Label style={labelStyle} className={`refLabel`}>按岗位:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions),positonRef)} />\n                        </div>\n                    </Row>\n                    <Row   style={{'marginTop':'15px','marginBottom':'15px'}}>\n                        <Label style={labelStyle} className={`refLabel`}>按角色:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions),roleRef)} />\n                        </div>\n                        <Label style={labelStyle} className={`refLabel`}>按用户:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />\n                        </div>\n                    </Row>\n                    <Checkbox style={{ \"margin\": 0}} checked={this.state.intersection} onChange={this.changeCheck}>是否交集</Checkbox>\n        </div>);\n    }\n}\nBpmCopyContent.propTypes = propTypes;\nBpmCopyContent.defaultProps = {\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"role_new_table\",\n    userRef:\"newuser\"\n}\nexport default BpmCopyContent;\n","/**\n * bpm流程数据历史表格\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Table } from 'tinper-bee';\nimport { descriptionToText, sendBpmTaskAJAX, timestampToDate } from './common';\nconst propTypes = {\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string\n};\n\nclass BpmTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        };\n        this.columns = [\n            {\n                title: \"任务ID\",\n                dataIndex: \"id\",\n                key: \"id\",\n                width: \"30%\"\n            },\n            {\n                title: \"任务名称\",\n                dataIndex: \"name\",\n                key: \"name\"\n            },\n            {\n                title: \"任务类型\",\n                dataIndex: \"description\",\n                key: \"description\",\n                render: (text, record, index) => {\n                    return <div>{descriptionToText(text)}</div>\n                }\n            },\n            {\n                title: \"执行者\",\n                dataIndex: \"executionId\",\n                key: \"executionId\"\n            },\n            {\n                title: \"开始时间\",\n                dataIndex: \"startTime\",\n                key: \"startTime\",\n                render: (text, record, index) => {\n                    return <div>{timestampToDate(text)}</div>\n                }\n            },\n            {\n                title: \"结束时间\",\n                dataIndex: \"endTime\",\n                key: \"endTime\",\n                render: (text, record, index) => {\n                    if (text == null) {\n                        return <div>-</div>\n                    } else {\n                        return <div>{timestampToDate(text)}</div>\n                    }\n                }\n            },\n            {\n                title: \"审批意见\",\n                dataIndex: \"deleteReason\",\n                key: \"deleteReason\"\n            },\n            {\n                title: \"超时时间\",\n                dataIndex: \"claimTime\",\n                key: \"claimTime\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let { processDefinitionId, processInstanceId } = this.props;\n        let hisTasklistData = await sendBpmTaskAJAX('hisTasklist', {\n            processDefinitionId,\n            processInstanceId\n        });\n        this.setState({\n            data: hisTasklistData.data.data\n        });\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有流程历史数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n        />);\n    }\n}\nBpmTable.propTypes = propTypes;\nBpmTable.defaultProps = {\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\"\n}\nexport default BpmTable;\n","/**\n * bpm流程图组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst propTypes = {\n    url: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n};\n\nclass BpmFlowChart extends Component {\n    render() {\n        let { processDefinitionId, processInstanceId, width, height, url } = this.props;\n        return (\n            <div>\n                <iframe\n                    style={{ width, height, \"minHeight\": \"300px\" }}\n                    src={`${url}?processDefinitionId=${processDefinitionId}&processInstanceId=${processInstanceId}`}\n                    frameBorder=\"0\"\n                >\n                </iframe>\n            </div>\n        );\n    }\n}\nBpmFlowChart.propTypes = propTypes;\nBpmFlowChart.defaultProps = {\n    url: \"/eiap-plus/vendor/diagram-viewer/index.html\",\n    width: \"99%\",\n    height: \"300px\",\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\"\n}\n\nexport default BpmFlowChart;","/**\n * bpm流程任务审批组件\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Col, Message, Modal, Radio, Row, Table,Select,FormControl} from 'tinper-bee';\nimport createModal from 'yyuap-ref';\nimport { approvetypeToText, sendBpmTaskAJAX } from './common';\nimport refOptions from './refOptions';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nconst propTypes = {\n    id: PropTypes.string,\n    appType: PropTypes.string,\n    refCode: PropTypes.string,\n    properties:PropTypes.object,\n    onBpmFlowClick: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onChangestate:PropTypes.func\n};\n\nclass BpmTaskApproval extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            approvetype: \"agree\",\n            comment: \"审批同意\",\n            processDefinitionId: props.processDefinitionId,\n            processInstanceId: props.processInstanceId,\n            taskId: props.id,\n            activityId: \"\",\n            activityName:\"\",\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: [],\n            userIds: [],\n            userId: [],\n            userName:[],\n            HuoDongID: \"\",//新版活动ID\n            HuoDongName: \"\"//新版活动名字\n        }\n        //驳回到环节的Modal-Table\n        this.rejectToActivityCol = [{\n            title: \"活动编码\",\n            dataIndex: \"activityId\",\n            key: \"activityId\",\n            width: \"40%\"\n        },\n        {\n            title: \"活动名称\",\n            dataIndex: \"activityName\",\n            key: \"activityName\",\n            width: \"30%\"\n        }]\n    }\n    componentWillMount = () => {\n        //通过billID获得processDefinitionId,processInstanceId\n        // let pID = await billidToIds('f39234a2-ed92-473f-b7c1-45f71559facb');\n    }\n    componentDidMount = () => {\n        //传入类型是弃审，那么直接设置2\n        if (this.props.appType == \"2\") {\n            this.setState({\n                approvetype: \"withdraw\",\n                comment: approvetypeToText(\"withdraw\")\n            },()=>{\n                this.props.onChangestate(this.state);\n            });\n        }\n    }\n\n    //选择审批的类型\n    handleChange = (value) => {\n        this.setState({\n            approvetype: value,\n            comment: approvetypeToText(value) ,\n            userName:\"\",\n            userIds: [],\n            userId: [],\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //绑定审批意见\n    handlerCommentChange = (e) => {\n        this.setState({ comment: e.target.value },()=>{\n            this.props.onChangestate(this.state);\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //审批提交\n\n    //通用关闭方法\n    activityModalClose = () => {\n        this.setState({\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: []\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //驳回到环节的最终提交\n    rejectToActivityOK = async () => {\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        onStart && onStart();\n        let rejectToBillMakerMsg = await sendBpmTaskAJAX('rejectToBillMaker', {\n            activityId: this.state.activityId,\n            approvetype: this.state.approvetype,\n            comment: this.state.comment,\n            processInstanceId: this.state.processInstanceId,\n            taskId: this.state.taskId\n        }).catch((e) => {\n            Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: `服务器请求错误`\n            });\n        });\n\n        if (rejectToBillMakerMsg.data.flag == 'success') {\n            onSuccess && onSuccess();\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'info', position: 'top' });\n            this.setState({\n                rejectToActivityShow: false,\n                rejectlist: [],\n                selectedRow: []\n            },()=>{\n                this.props.onChangestate(this.state);\n            });\n        } else {\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: rejectToBillMakerMsg.data.msg\n            });\n        }\n    }\n    //流程图函数调用\n    handlerFlow = () => {\n        let onBpmFlowClick = this.props.onBpmFlowClick;\n        onBpmFlowClick && onBpmFlowClick();\n    }\n    getDataSource=()=>{\n        let arr =[{\n            key: \"同意\",\n            value: \"agree\"\n        }];\n        let { addsignAble,rejectAble ,delegateAble,unagreeable } = this.props.properties\n        if(unagreeable)arr.push({key: \"不同意\", value: \"unagree\"})\n        if(rejectAble)arr.push({key: \"驳回到环节\", value: \"rejectToActivity\"})\n        if(addsignAble)arr.push({key: \"加签\", value: \"signAdd\"})\n        if(delegateAble)arr.push({key: \"改派\", value: \"delegate\"})\n        return arr\n    }\n    rejectToActivity= async ()=>{\n        let { onError } = this.props;\n        let result = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n        if (result.data.flag == 'success'&& result.data.rejectlist.length>0) {\n            this.setState({\n                rejectlist: result.data.rejectlist,\n                selectedRow: new Array(result.data.rejectlist.length),\n                rejectToActivityShow: true\n            });\n        } else {\n            Message.create({ content: result.data.msg||'当前环节为首环节，没有可以驳回的环节', color: 'warning', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: result.data.msg||'当前环节为首环节，没有可以驳回的环节'\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let userRef ={\n            title:self.state.approvetype ==='delegate'?'改派人员选择':\"加签人员选择\",\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: self.state.approvetype === 'delegate',\n            filterRefUrl: '/iuap_pap_quickstart/common/filterRef',\n            className: '',\n            param: {//url请求参数\n                refCode: 'newuser',\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.userId,\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                var temp = sels.map(v => v.id);\n                //显示值\n                let userName = self.state.userName;\n                userName = showVal;\n                //选中的值\n                let userId = self.state.userIds;\n                userId = temp;\n                self.setState({\n                    userId: userId[0],\n                    userIds:userId,\n                    userName: userName,\n\n                },()=>{\n                    self.props.onChangestate(self.state);\n                });\n            },\n            showVal: this.state.userName,\n            showKey: 'refname',\n            verification: false\n        }\n        return (\n            <div className=\"clearfix\">\n                <div style={{ \"padding\": \"0px\" }}>\n                    {this.props.appType == \"1\" && <div>\n                        <Row style={{\n                            \"margin\":\"8px 0\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={1} xs={1} sm={1} style={{\"paddingLeft\":0,\"paddingRight\":'15px'}}>\n                                <Select\n                                    style={{ width: '100%' }}\n                                    placeholder=\"请选择\"\n                                    onChange={self.handleChange}\n                                    defaultValue=\"agree\"\n                                    data={self.getDataSource()}\n                                />\n                            </Col>\n                                <Col md={3} xs={3} sm={3} style={{\"paddingLeft\":0}}>\n                                    {this.state.approvetype===\"signAdd\" &&<RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />}{/*加签*/}\n                                    {this.state.approvetype===\"delegate\" &&<RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />}{/*改派*/}\n                                    {this.state.approvetype===\"rejectToActivity\" &&<FormControl\n                                        readOnly={true}\n                                        placeholder={'请选择环节'}\n                                        value={this.state.activityName}\n                                        onClick={this.rejectToActivity}\n                                        onChange={this.onChange} />}{/*驳回*/}\n                                </Col>\n                            <Col md={4} mdOffset={4} xs={4} xsOffset={4} sm={4} smOffset={4} style={{ \"textAlign\": \"right\",\"paddingRight\": 0}}>\n                                {/*{this.props.appType == \"1\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}*/}\n                                {this.props.appType == \"1\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入处理意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                    {this.props.appType == \"2\" && <div>\n                        <Row style={{\n                            \"height\": \"46px\",\n                            \"lineHeight\": \"46px\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={8}>\n                                <Radio.RadioGroup\n                                    name=\"approvetype\"\n                                    selectedValue={this.state.approvetype}\n                                    onChange={this.handleChange}>\n                                    <Radio value=\"withdraw\">弃审</Radio>\n                                </Radio.RadioGroup>\n                            </Col>\n                            <Col md={4} style={{ \"textAlign\": \"right\" }}>\n                                {/*{this.props.appType == \"2\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}*/}\n                                {this.props.appType == \"2\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入弃审意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                </div>\n                <Modal\n                    show={this.state.rejectToActivityShow}\n                    backdrop={false}\n                    onHide={this.activityModalClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title> 活动列表 </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table\n                            rowKey={(r) => r.activityId}\n                            emptyText={() => (<div>暂无数据</div>)}\n                            rowClassName={(record, index, indent) => {\n                                if (this.state.selectedRow[index]) {\n                                    return 'selected';\n                                } else {\n                                    return '';\n                                }\n                            }}\n                            onRowClick={(record, index, indent) => {\n                                let selectedRow = new Array(this.state.rejectlist.length);\n                                selectedRow[index] = true;\n                                this.setState({\n                                    activityId: record.activityId,\n                                    activityName:record.activityName,\n                                    selectedRow: selectedRow\n                                },()=>{\n                                    this.props.onChangestate(this.state);\n                                });\n                            }}\n                            columns={this.rejectToActivityCol} data={this.state.rejectlist} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button colors=\"danger\" style={{ \"marginRight\": \"10px\" }} onClick={this.activityModalClose}> 确定 </Button>\n                        <Button onClick={this.activityModalClose}> 关闭 </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\nBpmTaskApproval.propTypes = propTypes;\nBpmTaskApproval.defaultProps = {\n    appType: \"1\",\n    refCode: \"newuser\",\n    properties:{\n        addSignAble:true, //可否加签\n        iscopytouser:true, //可否抄送\n        rejectAble:true, //可否驳回\n        delegateAble:true, //可否改派\n        unagreeable:true, //可否不同意\n        assignAble:true, //可否指派\n    }\n}\n\nexport default BpmTaskApproval;\n","/**\n * 审批抄送组件\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {  Panel,Col, Row, Button ,Label,Checkbox} from 'tinper-bee';\nimport classnames from 'classnames'\nimport BpmCopyContent from \"./BpmCopyContent\";\nconst propTypes = {\n    panelOpen:PropTypes.bool,//是否默认展开，false默认关闭\n    reset:PropTypes.func,//重置的回调\n    title: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    organrefCode: PropTypes.string,\n    positonrefCode: PropTypes.string,\n    refCode: PropTypes.string,\n    onCopyusersChange:PropTypes.func,\n    onintersectionChange:PropTypes.func\n};\nclass BpmTaskCopyPanel extends Component {\n    constructor() {\n        super();\n        this.state = {\n            panelOpen:true,\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true\n        };\n    }\n    open=()=>{\n        this.setState({\n            panelOpen: !this.state.panelOpen\n        })\n    }\n    changeCheck=()=> {\n        this.setState({intersection:!this.state.intersection});\n    }\n    render() {\n        let self = this;\n        let classes = 'copy-panel';\n        let header = () => {\n            return (\n                <div className=\"clearfix\" onClick={this.open}>\n                    <span  className={'copy-panel-title'} style={{\"float\":\"left\",\"color\": \"#434A54\",\"fontSize\": \"14px\"}}>\n                        {this.props.title}\n                    </span>\n                    <span  className={'copy-panel-icon'} style={{\"float\":\"right\", \"color\": \"#1E7BE2\",\"fontSize\": \"14px\"}}>\n                        {this.state.panelOpen ? '展开':'收起'}\n                        <i className={classnames({\n                            'uf': true,\n                            'uf-arrow-down': !this.state.panelOpen,\n                            'uf-arrow-right': this.state.panelOpen\n                        })}/>\n                    </span>\n                </div>\n            )\n        };\n        return (\n            <Panel className={classes} style={{\"borderRadius\": \"0!important\",\"border\": \"none!important\",\"borderBottom\": \"1px solid transparent!important\"}}  header={header()}  collapsible expanded={this.state.searchOpen}>\n                <div className=\"clearfix\">\n                    <BpmCopyContent onCopyusersChange={self.props.onCopyusersChange}\n                        {...self.props}\n                        onintersectionChange={self.props.onintersectionChange}\n                    />\n                </div>\n\n        </Panel>\n        );\n    }\n}\nBpmTaskCopyPanel.propTypes = propTypes;\nBpmTaskCopyPanel.defaultProps = {\n    panelOpen:false,//是否默认展开，false默认关闭\n    selectResult:() => {},// : PropTypes.func,//查询的回调\n    reset: () => {},//重置的回调\n    title: \"抄送(选填)\",\n    filterRefUrl:'/iuap_pap_quickstart/common/filterRef',\n    refCode: \"newuser\",\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"newrole\",\n    userRef:\"newuser\"\n}\nexport default BpmTaskCopyPanel;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Demo from './demo';\n\nReactDOM.render(<Demo />, document.querySelector(\"#app\"));","import React, { Component } from 'react';\nimport { Button } from 'tinper-bee';\nimport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign\n} from './index';\n\nimport 'tinper-bee/assets/tinper-bee.css';\n// import './index.less';\n\nclass Demo extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <BpmTaskApprovalWrap\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                    appType=\"1\"\n                    id=\"3be26f2debb442d9b5f8012ba40c3fa3\"\n                />\n                <BpmLinkAssign />\n                <BpmFlowChart\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTable\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTestCheckTable />\n                <BpmButtonSubmit\n                    funccode=\"ygdemo_yw_info\"\n                    nodekey=\"003\"\n                    size=\"lg\"\n                    isOne={false}\n                    url={`/ygdemo_yw_info/submit`}\n                    urlAssignSubmit={`/ygdemo_yw_info/assignSubmit`}\n                    checkedArray={\n                        [\n                            { \"id\": \"ea69b9bf-d8b5-47a7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 },\n                            { \"id\": \"ea69b9bf-d8sssa7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 }\n                        ]\n                    }\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-up'></i>提交\n                    </Button>\n                </BpmButtonSubmit>\n                <BpmButtonRecall\n                    url={`/iuap_pap_quickstart/example_workorder/recall`}\n                    checkedArray={\n                        [\n                            {\n                                \"id\": \"ccb34c6d3fc349789be73678d7cc8fac\",\n                                \"createTime\": \"2018-07-04 12:36:26 088\",\n                                \"createUser\": \"U001\",\n                                \"lastModified\": \"2018-07-04 12:36:26 088\",\n                                \"lastModifyUser\": \"U001\",\n                                \"ts\": \"2018-07-04 12:36:26 088\",\n                                \"dr\": 0,\n                                \"bpmState\": 1,\n                                \"taskKey\": null,\n                                \"taskId\": null,\n                                \"processInstanceId\": null,\n                                \"processDefineCode\": null,\n                                \"comment\": null,\n                                \"orderCode\": \"201807042036265\",\n                                \"orderName\": null,\n                                \"supplier\": null,\n                                \"supplierName\": \"11\",\n                                \"type\": \"0\",\n                                \"purchasing\": \"22\",\n                                \"purchasingGroup\": \"22\",\n                                \"voucherDate\": 1530633600000,\n                                \"approvalState\": null,\n                                \"confirmState\": null,\n                                \"closeState\": null,\n                                \"type_name\": \"投诉工单\",\n                                \"approvalState_name\": null,\n                                \"confirmState_name\": null,\n                                \"closeState_name\": null,\n                                \"remark\": null,\n                                \"bpmBillCode\": null\n                            }\n                        ]\n                    }\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-down'></i>收回\n                    </Button>\n                </BpmButtonRecall>\n            </div>\n        );\n    }\n}\n\nexport default Demo;\n","import BpmTable from './BpmTable';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport BpmTestCheckTable from './BpmTestCheckTable';\nimport BpmWrap from './BpmWrap';\nimport BpmTaskApprovalWrap from './BpmTaskApprovalWrap';\nimport BpmButtonSubmit from './BpmButtonSubmit';\nimport BpmButtonRecall from './BpmButtonRecall';\nimport BpmLinkAssign from './BpmLinkAssign';\nimport BpmCopyContent from './BpmCopyContent';\nimport BpmTaskCopyPanel from './BpmTaskCopyPanel';\n\n\nexport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign,\n    BpmCopyContent,\n    BpmTaskCopyPanel\n}","/**\n * 核心功能函数处理类\n */\n\nimport axios from 'axios';\nimport { Message } from 'tinper-bee';\n\n/**\n * 后端时间戳转换正常日期时间\n * @param {*} _stamp 时间戳\n * @param {*} formatStr 日期格式\n */\nexport const timestampToDate = (_stamp, formatStr = 'yyyy-MM-dd  hh:mm:ss') => {\n    let unixTimestamp = new Date(_stamp);\n    {\n        var str = formatStr;\n        var Week = ['日', '一', '二', '三', '四', '五', '六'];\n\n        str = str.replace(/yyyy|YYYY/, unixTimestamp.getFullYear());\n        str = str.replace(/yy|YY/, (unixTimestamp.getYear() % 100) > 9 ? (unixTimestamp.getYear() % 100).toString() : '0' + (unixTimestamp.getYear() % 100));\n        var month = unixTimestamp.getMonth() + 1;\n        str = str.replace(/MM/, month > 9 ? month.toString() : '0' + month);\n        str = str.replace(/M/g, month);\n\n        str = str.replace(/w|W/g, Week[unixTimestamp.getDay()]);\n\n        str = str.replace(/dd|DD/, unixTimestamp.getDate() > 9 ? unixTimestamp.getDate().toString() : '0' + unixTimestamp.getDate());\n        str = str.replace(/d|D/g, unixTimestamp.getDate());\n\n        str = str.replace(/hh|HH/, unixTimestamp.getHours() > 9 ? unixTimestamp.getHours().toString() : '0' + unixTimestamp.getHours());\n        str = str.replace(/h|H/g, unixTimestamp.getHours());\n        str = str.replace(/mm/, unixTimestamp.getMinutes() > 9 ? unixTimestamp.getMinutes().toString() : '0' + unixTimestamp.getMinutes());\n        str = str.replace(/m/g, unixTimestamp.getMinutes());\n\n        str = str.replace(/ss|SS/, unixTimestamp.getSeconds() > 9 ? unixTimestamp.getSeconds().toString() : '0' + unixTimestamp.getSeconds());\n        str = str.replace(/s|S/g, unixTimestamp.getSeconds());\n        return str;\n    }\n}\n\n/**\n * 流程历史表格描述转换\n */\nexport const descriptionToText = (vApproveType) => {\n    if (vApproveType == 'submit') {\n        return '提交';\n    }\n    if (vApproveType == 'agree') {\n        return '审批';\n    }\n    if (vApproveType == 'unagree') {\n        return '不同意';\n    }\n    if (vApproveType == 'reject') {\n        return '驳回';\n    }\n    if (vApproveType == 'signAdd') {\n        return '加签';\n    }\n    if (vApproveType == 'signAdding') {\n        return '加签中';\n    }\n    if (vApproveType == 'delegate') {\n        return '改派';\n    }\n    if (vApproveType == 'termination') {\n        return '终止';\n    }\n    if (vApproveType == 'withdraw') {\n        return '删除';\n    }\n    if (vApproveType == 'postCompleted') {\n        return '审批';\n    }\n}\n\n/**\n * 获得处理URL\n */\nexport const getBpmTaskURL = (type, root = \"/eiap-plus/\") => {\n    switch (type) {\n        case 'agree':\n            return root + 'task/completetask/approveCard';\n        case 'unagree':\n            return root + 'task/completetask/approveCard';\n        case 'rejectToActivity':\n            return root + 'task/rejecttask/bfreject';\n        case 'rejectToBillMaker':\n            return root + 'task/rejecttask/reject';\n        case 'signAdd':\n            return root + 'task/assignee/getlist';\n        case 'delegate':\n            return root + 'task/assignee/getlist';\n        case 'withdraw':\n            return root + 'task/withdrawtask/withdraw';\n        case 'hisTasklist':\n            return root + 'process/hisTasklist';\n        case 'commit':\n            return root + 'task/assigntask/commit';\n        case 'signaddtask':\n            return root + 'task/signaddtask/signadd';\n        case 'delegatetask':\n            return root + 'task/delegatetask/delegate';\n        default:\n            return \"/\"\n            break;\n    }\n}\n\n/**\n * 发送异步\n */\nexport const sendBpmTaskAJAX = (type, data) => {\n    switch (type) {\n        case 'agree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'unagree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToActivity':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToBillMaker':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signAdd':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegate':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'withdraw':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'hisTasklist':\n            return axios.post(getBpmTaskURL(type), {\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'commit':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                activityName: data.activityName,\n                comment: data.comment,\n                taskId: data.taskId,\n                approvetype: data.approvetype,\n                processInstanceId: data.processInstanceId,\n                participants: data.participants\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signaddtask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userIds: data.userIds,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegatetask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userId: data.userId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n\n        default:\n            break;\n    }\n    return axios.post(getBpmTaskURL(type), data).catch((e) => {\n        Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n    })\n}\n\n/**\n * 通过billID获得流程图参数\n */\nexport const billidToIds = (billId) => {\n    return axios.post('/eiap-plus/process/getbillbpm', {\n        billId\n    });\n}\n/**\n * 查询数据\n */\nexport const queryBpmTemplateAllocate = (obj) => {\n    return axios.get(`/eiap-plus/appResAllocate/queryBpmTemplateAllocate?_=${Math.random()}`, {\n        params: {\n            funccode: obj.funccode,\n            nodekey: obj.nodekey\n        }\n    });\n}\n/**\n * 提交流程\n */\nexport const onCommit = (data) => {\n    return axios({\n        url: `${data.url}`,\n        method: \"post\",\n        data: data['submitArray'],\n        params: { \"processDefineCode\": data['processDefineCode'] }\n    });\n}\n/**\n * 收回流程\n */\nexport const onRecall = (url, data) => {\n    return axios({\n        url: `${url}`,\n        method: \"post\",\n        data: data\n    });\n}\n\n/**\n * 审批状态类型返回默认审批文案\n */\nexport const approvetypeToText = (type) => {\n    switch (type) {\n        case 'agree':\n            return '审批同意';\n        case 'unagree':\n            return '审批不同意';\n        case 'rejectToActivity':\n            return '驳回到环节';\n        case 'rejectToBillMaker':\n            return '驳回到制单人';\n        case 'signAdd':\n            return '加签';\n        case 'delegate':\n            return '改派';\n        case 'withdraw':\n            return '弃审';\n        default:\n            break;\n    }\n}\n\n/**\n * Unicode编码转换\n */\nexport const reconvert = (str) => {\n    str = str.replace(/(\\\\u)(\\w{1,4})/gi, function ($0) {\n        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\\w{1,4})/g, \"$2\")), 16)));\n    });\n    str = str.replace(/(&#x)(\\w{1,4});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\\w{1,4})(%3B)/g, \"$2\"), 16));\n    });\n    str = str.replace(/(&#)(\\d{1,6});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23)(\\d{1,6})(%3B)/g, \"$2\")));\n    });\n\n    return str;\n}","let option = {\n    title: '',\n    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n    className: '',\n    param: {//url请求参数\n        refCode: 'bd_common_user',\n        tenantId: '',\n        sysId: '',\n        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n    },\n    refModelUrl: {\n        TreeUrl: '/newref/rest/iref_ctr/blobRefTree', //树请求\n        TableBodyUrl: '/newref/rest/iref_ctr/blobRefTreeGrid',//表体请求//ref/rest/iref_ctr/blobRefTreeGrid\n        TableBarUrl: '/newref/rest/iref_ctr/refInfo',//表头请求ref/rest/iref_ctr/refInfo\n    },\n    filterRefUrl: '/iuap_pap_quickstart/common/filterRef',//get\n    // keyList:['123'],//选中的key\n\n    // checkedArray: [],\n    onCancel: function (p) {\n        console.log(p)\n    },\n    filterKey: [{ title: '人员名称人员名称人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }],\n    textOption: {\n        modalTitle: '选择品类',\n        leftTitle: '品类结构',\n        rightTitle: '品类列表',\n        leftTransferText: '待选品类',\n        rightTransferText: '已选品类',\n        leftInfo: [{ text: '流水号', key: 'peoname' }, { text: '品类编码', key: 'institid' }, { text: '品类描述', key: 'refname' }],\n        rightInfo: [{ text: '流水号', key: 'id' }, { text: '品类编码', key: 'id' }, { text: '品类描述', key: 'peocode' }],\n    }\n}\n\n\nexport default JSON.stringify(option)\n","/**\n * 模拟任务中心测试组件\n */\n\nimport React, { Component } from 'react';\nimport { Table, Row, Col, Button } from 'tinper-bee';\nimport axios from 'axios';\n\nclass BpmTestCheckTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            factoryValue: {}\n        };\n        this.columns = [\n            {\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n                width: \"30%\"\n            },\n            {\n                title: \"ID\",\n                dataIndex: \"id\",\n                key: \"id\"\n            },\n            {\n                title: \"processDefinitionId\",\n                dataIndex: \"processDefinitionId\",\n                key: \"processDefinitionId\"\n            },\n            {\n                title: \"processInstanceId\",\n                dataIndex: \"processInstanceId\",\n                key: \"processInstanceId\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let hisTasklist = `eiap-plus/process/undoTasklist`;\n        let hisTasklistData = await axios.post(hisTasklist, { \"draw\": 1, \"length\": 10, \"order\": {}, \"search\": { \"search_EQ_code\": \"\", \"undefined\": \"\", \"processDefinitionName\": \"\", \"billno\": \"\" }, \"searchconfirm\": {} });\n        if (Array.isArray(hisTasklistData.data.data)) {\n            this.setState({\n                data: hisTasklistData.data.data\n            });\n        }\n\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n            title={() => <Button colors=\"primary\" onClick={() => {\n                //document.location.hash = `#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                document.location.hash = `#/bdm/bpmapproval?id=${this.state.factoryValue.id}&processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                //window.open(`http://127.0.0.1:3000/#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`);\n            }}>任务中心打开审批</Button>}\n            onRowClick={(record, index, indent) => {\n                this.setState({\n                    factoryValue: record\n                });\n            }}\n        />);\n    }\n}\n\nexport default BpmTestCheckTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row } from 'tinper-bee';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTable from './BpmTable';\nimport { billidToIds } from './common';\n\n\nconst propTypes = {\n    id: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n\n}\nclass BpmWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            processDefinitionId: \"\",\n            processInstanceId: \"\"\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            let { processDefinitionId, processInstanceId } = pID.data;\n            this.setState({\n                processDefinitionId,\n                processInstanceId\n            });\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmFlowChart\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmTable\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\nBpmWrap.propTypes = propTypes;\nBpmWrap.defaultProps = {\n    id: \"\"\n}\nexport default BpmWrap;\n","/**\n * 审批逻辑组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row, Button ,Message} from 'tinper-bee';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport { billidToIds } from './common';\nimport refOptions from './refOptions';\nimport createModal from 'yyuap-ref';\nimport { sendBpmTaskAJAX } from './common';\nimport BpmTaskCopyPanel from  './BpmTaskCopyPanel';\n\nconst propTypes = {\n    id: PropTypes.string,\n    refCode: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    onBpmFlowClick: PropTypes.func,\n    appType: PropTypes.string,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n}\nclass BpmTaskApprovalWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isShowFlowBtn: false,\n            id: \"\",\n            taskId: \"\",\n            processDefinitionId: \"\",\n            processInstanceId: \"\",\n            copyusers:[], //抄送数据\n            intersection:true, //是否交集\n            approvetype:\"agree\",  //审批类型\n            comment:\"审批同意\", //审批内容\n            activityId:\"\",//驳回环节id\n            userIds:[],//加签用户数组\n            userId:\"\",//改派用户\n            properties:{\n                addSignAble:true, //可否加签\n                iscopytouser:true, //可否抄送\n                rejectAble:true, //可否驳回\n                delegateAble:true, //可否改派\n                unagreeable:true, //可否不同意\n                assignAble:true, //可否指派\n            }\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            if (pID.data.message && pID.data.message == 'NoBpm') {\n                // console.log('NoBpm');\n                this.setState({\n                    isShowFlowBtn: false\n                });\n            } else if (pID.data.taskId) {\n                let { processDefinitionId, processInstanceId, taskId } = pID.data;\n                //可否加签|可否抄送|可否驳回|可否改派|可否不同意|可否指派\n                let {currentActivity:{ properties:{ addsignAble,iscopytouser,rejectAble ,delegateAble,unagreeable,assignAble }}}= pID.data;\n\n                this.setState({\n                    id: taskId,\n                    taskId:taskId,\n                    properties:{\n                        addsignAble,iscopytouser,rejectAble,delegateAble,unagreeable,assignAble\n                    },\n                    processDefinitionId,\n                    processInstanceId,\n                });\n            } else {\n                this.setState({\n                    isShowFlowBtn: true\n                });\n            }\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId,\n                id: this.props.id\n            });\n        }\n    }\n    //提交\n    handlerSubmitBtn =  async()=>{\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        if (this.state.comment == \"\") {\n            Message.create({ content: '审批意见不能为空', color: 'danger', position: 'top' });\n            return;\n        }\n        onStart && onStart();\n        //检测需要二次请求并弹出Modal审批\n        switch (this.state.approvetype) {\n            case 'agree'://同意\n            case 'unagree'://不同意\n                let result = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n                //普通同意操作，没有后续操作，直接成功\n                if (result.data.flag == 'success') {\n                    Message.create({ content: result.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else if (result.data.flag == 'faile') {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                //普通同意操作，有后续操作，有加签人员判断\n                if (result.data.assignAble) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.assignList.length > 0) {\n                        this.setState({\n                            HuoDongID: result.data.assignList[0].activityId,\n                            HuoDongName: result.data.assignList[0].activityName\n                        });\n                    }\n                    // onStart && onStart();\n                    //可以是加签操作，拉取加签请求\n                    onEnd && onEnd();\n                    //TODO 穿梭框参照 配置参照需要参数\n                    var options = Object.assign(JSON.parse(refOptions), {\n                        title: '指派人员选择',\n                        backdrop: false,\n                        hasPage: true,\n                        refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                        isRadio: false,\n                        className: '',\n                        param: {//url请求参数\n                            refCode: this.props.refCode,\n                            tenantId: '',\n                            sysId: '',\n                            transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                        },\n                        //选择中的数据\n                        keyList: [],\n                        //保存回调sels选中的行数据showVal显示的字\n                        onSave: async (sels, showVal) => {//showVal=\"12;13;管理员\"\n                            //回调\n                            onStart && onStart();\n                            //同意后续的加签\n                            //TO DO:重构URL\n                            var agreeeMsg = await sendBpmTaskAJAX('commit', {\n                                activityId: this.state.HuoDongID,\n                                activityName: this.state.HuoDongName,\n                                comment: this.state.comment,\n                                taskId: this.state.taskId,\n                                approvetype: this.state.approvetype,\n                                processInstanceId: this.state.processInstanceId,\n                                participants: Array.from(sels, x => ({ id: x.id }))\n                            }).catch((e) => {\n                                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: `服务器请求出错`\n                                });\n                            });\n                            //确认加签后的处理\n                            if (agreeeMsg.data.flag == 'success') {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'info', position: 'top' });\n                                this.setState({\n                                    rejectlist: [],\n                                    selectedRow: []\n                                });\n                                onSuccess && onSuccess();\n                            } else {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: agreeeMsg.data.msg\n                                });\n                            }\n                        },\n                        showVal: '',\n                        showKey: 'refname',\n                        verification: false\n                    });\n                    //弹出参照组件\n                    createModal(options);\n                }\n                break;\n            //驳回到环节\n            case 'rejectToActivity':\n                let {activityId,approvetype,comment,processInstanceId,taskId}=this.state;\n                if(!activityId ||activityId.length ===0){\n                    Message.create({ content: `驳回环节不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `驳回环节不可为空`\n                    });\n                    return\n                }\n                let rejectToBillMakerMsg = await sendBpmTaskAJAX('rejectToBillMaker', {\n                    activityId: activityId,\n                    approvetype: approvetype,\n                    comment: comment,\n                    processInstanceId: processInstanceId,\n                    taskId: taskId,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求错误`\n                    });\n                });\n\n                if (rejectToBillMakerMsg.data.flag == 'success') {\n                    onSuccess && onSuccess();\n                    Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'info', position: 'top' });\n                    this.setState({\n                        rejectToActivityShow: false,\n                        rejectlist: [],\n                        selectedRow: []\n                    });\n                } else {\n                    Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: rejectToBillMakerMsg.data.msg\n                    });\n                }\n                break;\n            //加签\n            case 'signAdd':\n                onStart && onStart();\n                //TO DO:重构URL\n                if(!this.state.userIds ||this.state.userIds.length ===0){\n                    Message.create({ content: `加签人员不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `加签人员不可为空`\n                    });\n                    return\n                }\n                //执行最终加签操作\n                let signAddMsg = await sendBpmTaskAJAX('signaddtask', {\n                    approvetype: this.state.approvetype,\n                    comment: this.state.comment,\n                    processInstanceId: this.state.processInstanceId,\n                    taskId: this.state.taskId,\n                    userIds: this.state.userIds,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求出错`\n                    });\n                });\n                //判断加签最终是否成功\n                if (signAddMsg.data.flag == 'success') {\n                    Message.create({ content: `${signAddMsg.data.msg}`, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: `${signAddMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: signAddMsg.data.msg\n                    });\n                }\n                break;\n            //改派\n            case 'delegate':\n                onStart && onStart();\n                if(!this.state.userId ||this.state.userId.length ===0){\n                    Message.create({ content: `改派人员不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `改派人员不可为空`\n                    });\n                    return\n                }\n                //TO DO:重构URL\n                let delegateMsg = await sendBpmTaskAJAX('delegatetask', {\n                    approvetype: this.state.approvetype,\n                    comment: this.state.comment,\n                    processInstanceId: this.state.processInstanceId,\n                    taskId: this.state.taskId,\n                    userId: this.state.userId,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求出错`\n                    });\n                });\n                //处理后续的操作\n                if (delegateMsg.data.flag === 'success') {\n                    Message.create({ content: `${delegateMsg.data.msg}`, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: `${delegateMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: delegateMsg.data.msg\n                    });\n                }\n                break;\n            case 'withdraw':\n                let res = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n                if (res.data.flag === 'success') {\n                    Message.create({ content: res.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: res.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: res.data.msg\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    onChangestate =(s)=>{  //审批面板选择的数据\n           //审批类型       审批消息  任务ID  驳回活动id   加签数据  改派\n        let { approvetype, comment,taskId, activityId, userIds, userId} =s;\n        this.setState({\n            approvetype, comment,taskId, activityId, userIds, userId\n        });\n    }\n    render() {\n        return (\n            <div className=\"clearfix\">\n                {this.state.processDefinitionId && <div>\n                    <Row>\n                        <div>\n\n                        </div>\n                    </Row>\n                    <Row>\n                    <Col md={12}>\n                        <BpmTaskApproval\n                            id={this.state.id}\n                            refCode={this.props.refCode}\n                            onBpmFlowClick={this.props.onBpmFlowClick}\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                            appType={this.props.appType}\n                            properties={this.state.properties}\n                            onStart={this.props.onStart}\n                            onEnd={this.props.onEnd}\n                            onSuccess={this.props.onSuccess}\n                            onError={this.props.onError}\n                            onChangestate = {this.onChangestate}\n                        />\n                    </Col>\n                </Row>\n                    {this.state.properties.iscopytouser && this.props.appType == 1 && <Row>\n                    <Col md={12}>\n                        <BpmTaskCopyPanel\n                            panelOpen={false}\n                            title={'抄送(选填)'}\n                            onCopyusersChange={(s)=>{\n                                this.setState({copyusers:s});\n\n                            }}\n                            onintersectionChange={(s)=>{\n                                this.setState({intersection:s});\n                            }}\n\n                        />\n                    </Col>\n                </Row>}\n                    <Row>\n                        <Col  style={{ \"textAlign\": \"right\" }}>\n                            <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"26px\" }} colors=\"primary\">提交</Button>\n                        </Col>\n                    </Row>\n\n                </div>}\n                {this.state.isShowFlowBtn && <Row>\n                    <Col mdOffset={11} md={1} style={{ \"textAlign\": \"right\" }}>\n                        <Button onClick={this.props.onBpmFlowClick} style={{ \"marginBottom\": \"4px\", \"marginRight\": \"15px\" }} colors=\"primary\">流程图</Button>\n                    </Col>\n                </Row>}\n            </div>\n        );\n    }\n}\nBpmTaskApprovalWrap.propTypes = propTypes;\nBpmTaskApprovalWrap.defaultProps = {\n    id: \"\",\n    appType: \"1\",\n    refCode: \"newuser\"\n}\nexport default BpmTaskApprovalWrap;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table ,Row,Label,Checkbox } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert } from './common';\nimport refOptions from './refOptions';\nimport BpmCopyContent from \"./BpmCopyContent\";\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    size: PropTypes.string,\n    scrollY: PropTypes.number,\n    isOne: PropTypes.bool,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonSubmit extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: [],//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [],\n            chaosongShow:false,//抄送显示\n            editRowIndex: 0,\n            showVal: [],\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true  //是否交集\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, isOne, onStart, onEnd, onSuccess, onError } = this.props;\n        //检查是否多单据提交\n        if (isOne && checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            chaosongShow:result.data.detailMsg.data.assignedActivities[0].properties.iscopytouser,\n                            huanjieList: result.data.detailMsg.data.assignedActivities,\n                            obj: checkedArray,\n                            assignInfo: {\n                                assignInfoItems: Array.from(result.data.detailMsg.data.assignedActivities, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            chaosongShow:false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj,copyusers,intersection } = this.state;\n        obj=obj[0];\n        let arr=[];\n        copyusers.map(function(value) {\n            arr=arr.concat(value);\n        });\n        copyusers=arr;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj,\n            copyusers,\n            intersection\n\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                chaosongShow:false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                chaosongShow:false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    changeCheck=()=> {\n        this.setState({intersection:!this.state.intersection});\n    }\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '指派人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            }\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n\n\n        return (<span>\n            <span onClick={this.handlerBtn}>\n                {\n                    this.props.children\n                }\n            </span>\n            <Modal\n                size={this.props.size}\n                show={this.state.huanjieShow||this.state.chaosongShow}\n                backdrop={false}\n                enforceFocus={false}\n                onHide={this.closeHuanjie}>\n                <Modal.Header closeButton>\n                    <Modal.Title> {this.state.huanjieShow?'环节指派':'抄送'}</Modal.Title>\n                </Modal.Header>\n                {this.state.huanjieShow?<Modal.Body>\n                    <Table\n                        rowKey={record => record.id}\n                        columns={huanjieCol}\n                        data={this.state.huanjieList}\n                        scroll={{ x: \"100%\", y: 200 }}\n                    />\n                </Modal.Body>:\"\"}\n                {this.state.huanjieShow?\n                <Modal.Header>\n                    <Modal.Title> 抄送 </Modal.Title>\n                </Modal.Header>:\"\"}\n                {this.state.chaosongShow?\n                    <Modal.Body>\n                        <BpmCopyContent\n                            onCopyusersChange={(s)=>{\n                                self.setState({copyusers:s})\n                            }}\n                            {...self.props}\n                            onintersectionChange={(s)=>{\n                                self.setState({intersection:s});\n                            }}\n                        />\n                    </Modal.Body>:\"\"}\n                <Modal.Footer>\n                    <Button style={{ \"marginRight\": \"10px\" }}  onClick={this.closeHuanjie}> 关闭 </Button>\n                    <Button colors=\"primary\"  onClick={this.huanjieHandlerOK}> 确定 </Button>\n\n                </Modal.Footer>\n            </Modal>\n        </span>);\n    }\n}\nBpmButtonSubmit.propTypes = propTypes;\nBpmButtonSubmit.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    size: \"\",\n    scrollY: 270,\n    isOne: false,\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"role_new_table\",\n    userRef:\"newuser\"\n}\nexport default BpmButtonSubmit;\n","/**\n * bpm 收回流程按钮\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { onRecall } from './common';\n\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    url: PropTypes.string,\n    data: PropTypes.array,\n    className: PropTypes.string,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonRecall extends Component {\n    constructor() {\n        super();\n    }\n    /**\n     * 收回操作事件\n     */\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        let recallArray = [];\n\n        //检查只能一条单据提交流程\n        if (checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据收回`\n            });\n            return;\n        }\n        //操作数据至少有一个\n        if (checkedArray.length > 0) {\n            if (checkedArray[0].bpmState != 0 && checkedArray[0].bpmState != null) {\n                recallArray.push({ id: checkedArray[0].id });\n            } else {\n                onError && onError({\n                    type: 1,\n                    msg: `流程没有启动无法撤回`\n                });\n            }\n        } else {\n            // 弹出提示请选择数据\n            onError && onError({\n                type: 1,\n                msg: `请选择单据才能撤回`\n            });\n            return;\n        }\n        if (recallArray.length > 0) {\n            onStart && onStart();\n            let { data: { success, detailMsg } } = await onRecall(this.props.url, recallArray);\n            if (detailMsg.data['success'] && detailMsg.data.success == 'success') {\n                onSuccess && onSuccess();\n            } else {\n                onError && onError({\n                    type: 2,\n                    msg: detailMsg.data.message\n                });\n            }\n        }\n    }\n    render() {\n        return (<span onClick={this.handlerBtn}>\n            {\n                this.props.children\n            }\n        </span>);\n    }\n}\nBpmButtonRecall.propTypes = propTypes;\nBpmButtonRecall.defaultProps = {\n    checkedArray: [],\n    url: \"/example/ygdemo_yw_info/unsubmit\",\n    data: [],\n    className: \"\"\n}\nexport default BpmButtonRecall;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert } from './common';\nimport refOptions from './refOptions';\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    scrollY: PropTypes.number,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmLinkAssign extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: {},//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [\n                { \"id\": \"approveUserTask3283\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3183\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3a83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3s83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask32d3\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3zza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTasqzza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask34za83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTas43zza83\", \"name\": \"1\", \"type\": \"userTask\" }\n            ],\n            editRowIndex: 0,\n            showVal: []\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        //检查只能一条单据提交流程\n        if (checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            huanjieList: result.data.detailMsg.data.assignedActivities,\n                            obj: checkedArray[0],\n                            assignInfo: {\n                                assignInfoItems: Array.from(result.data.detailMsg.data.assignedActivities, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj } = this.state;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            }\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n        return (<Table\n            loading={false}\n            scroll={{ y: this.props.scrollY }}\n            emptyText={() => (<span>暂无环节</span>)}\n            rowKey={record => record.id}\n            columns={huanjieCol}\n            data={this.state.huanjieList}\n        />);\n    }\n}\nBpmLinkAssign.propTypes = propTypes;\nBpmLinkAssign.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    scrollY: 270\n}\nexport default BpmLinkAssign;\n"],"sourceRoot":""}