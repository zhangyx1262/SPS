{"version":3,"sources":["webpack:///./src/BpmTable.js","webpack:///./src/BpmFlowChart.js","webpack:///./src/BpmTaskApproval.js","webpack:///./src/app.js","webpack:///./src/demo.js","webpack:///./src/index.js","webpack:///./src/common.js","webpack:///./src/BpmTestCheckTable.js","webpack:///./src/BpmWrap.js","webpack:///./src/BpmTaskApprovalWrap.js","webpack:///./src/BpmButtonSubmit.js","webpack:///./src/BpmButtonRecall.js","webpack:///./src/BpmLinkAssign.js","webpack:///./src/refOptions.js"],"names":["__webpack_require__","_react","_tinperBee","_common","propTypes","processDefinitionId","PropTypes","string","processInstanceId","axiosType","BpmTable","_this2","this","_classCallCheck","_this","_possibleConstructorReturn","__proto__","_getPrototypeOf2","default","call","componentDidMount","_asyncToGenerator","_regenerator2","mark","_callee","_this$props","hisTasklistData","wrap","_context","prev","next","props","sendBpmTaskAJAX","sent","setState","data","stop","state","columns","title","dataIndex","key","width","render","text","record","index","_react2","createElement","descriptionToText","timestampToDate","Component","Table","bordered","emptyText","defaultProps","url","height","BpmFlowChart","_props","style","minHeight","src","frameBorder","id","appType","refCode","onBpmFlowClick","func","onStart","onEnd","onSuccess","onError","BpmTaskApproval","componentWillMount","approvetype","comment","approvetypeToText","handleChange","value","handlerCommentChange","e","target","handlerSubmitBtn","_callee4","result","options","_context4","Message","create","content","color","position","abrupt","t0","flag","msg","type","assignAble","assignList","length","HuoDongID","activityId","HuoDongName","activityName","_assign2","JSON","parse","refOptions","backdrop","hasPage","refType","isRadio","className","param","tenantId","sysId","transmitParam","keyList","onSave","_ref2","sels","showVal","agreeeMsg","taskId","participants","_from2","x","catch","toString","rejectlist","selectedRow","_x","_x2","apply","arguments","showKey","verification","_yyuapRef2","Array","rejectToActivityShow","status","_ref3","_callee2","signAddMsg","_context2","userIds","_x3","_x4","_ref4","_callee3","delegateMsg","_context3","userId","isArray","_x5","_x6","activityModalClose","rejectToActivityOK","_callee5","_this$props2","rejectToBillMakerMsg","_context5","handlerFlow","rejectToActivityCol","_this3","padding","Row","lineHeight","Col","md","Radio","RadioGroup","name","selectedValue","onChange","textAlign","Button","onClick","marginRight","colors","outline","resize","border","marginBottom","borderRadius","placeholder","Modal","show","onHide","Header","closeButton","Title","Body","rowKey","r","rowClassName","indent","onRowClick","Footer","ReactDOM","_demo2","document","querySelector","_index","Demo","BpmTaskApprovalWrap","console","log","err","BpmLinkAssign","BpmTestCheckTable","BpmButtonSubmit","funccode","nodekey","size","isOne","urlAssignSubmit","checkedArray","code","ly_code","ly_sm","zr_dw","zr_dw_name","zrr","xb_dw","xb_dw_name","xbr","begin_date","end_date","zy_cd","qt_ld","zbr","zbr_name","dbr","jfyq","db_info","jd_bl","rwpf","kpi_flag","kpi_level","create_name","create_name_name","create_time","update_name","update_name_name","update_time","unitid","unitid_name","id_ygdemo_yw_sub","metaDefinedName","namespace","changedPropertyNames","tenant_id","dr","ts","shape","BpmButtonRecall","createTime","createUser","lastModified","lastModifyUser","bpmState","taskKey","processDefineCode","orderCode","orderName","supplier","supplierName","purchasing","purchasingGroup","voucherDate","approvalState","confirmState","closeState","type_name","approvalState_name","confirmState_name","closeState_name","remark","bpmBillCode","BpmWrap","_stamp","formatStr","undefined","unixTimestamp","Date","str","replace","getFullYear","getYear","month","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","vApproveType","getBpmTaskURL","root","axios","post","billidToIds","billId","queryBpmTemplateAllocate","obj","get","Math","random","params","onCommit","_axios2","method","onRecall","reconvert","$0","String","fromCharCode","parseInt","escape","hisTasklist","draw","order","search","search_EQ_code","processDefinitionName","billno","searchconfirm","factoryValue","location","hash","pID","_pID$data","_BpmFlowChart2","_BpmTable2","message","isShowFlowBtn","_BpmTaskApproval2","mdOffset","array","filterRefUrl","scrollY","number","bool","handlerBtn","_ref2$data","success","detailMsg","commitParam","_result","_result2","res_code","submitArray","assignedActivities","huanjieShow","huanjieList","assignInfo","assignInfoItems","closeHuanjie","childRefKey","signAddOK","editRowIndex","sourseArray","slice","huanjieHandlerOK","_this$state","self","huanjieCol","_refWithInput2","disabled","option","temp","map","v","_showVal","_childRefKey","children","enforceFocus","scroll","y","recallArray","forEach","da","push","loading","refModelUrl","TreeUrl","TableBodyUrl","TableBarUrl","onCancel","p","filterKey","textOption","modalTitle","leftTitle","rightTitle","leftTransferText","rightTransferText","leftInfo","rightInfo","_stringify2"],"mappings":"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","file":"js/main.d86ea690.bundle.js","sourcesContent":["/**\n * bpm流程数据历史表格\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Table } from 'tinper-bee';\nimport { descriptionToText, sendBpmTaskAJAX, timestampToDate } from './common';\nconst propTypes = {\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    axiosType:PropTypes.string,//默认查询历史记录\n};\n\nclass BpmTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        };\n        this.columns = [\n            {\n                title: \"任务ID\",\n                dataIndex: \"id\",\n                key: \"id\",\n                width: \"30%\"\n            },\n            {\n                title: \"任务名称\",\n                dataIndex: \"name\",\n                key: \"name\"\n            },\n            {\n                title: \"任务类型\",\n                dataIndex: \"description\",\n                key: \"description\",\n                render: (text, record, index) => {\n                    return <div>{descriptionToText(text)}</div>\n                }\n            },\n            {\n                title: \"执行者\",\n                dataIndex: \"executionId\",\n                key: \"executionId\"\n            },\n            {\n                title: \"开始时间\",\n                dataIndex: \"startTime\",\n                key: \"startTime\",\n                render: (text, record, index) => {\n                    return <div>{timestampToDate(text)}</div>\n                }\n            },\n            {\n                title: \"结束时间\",\n                dataIndex: \"endTime\",\n                key: \"endTime\",\n                render: (text, record, index) => {\n                    if (text == null) {\n                        return <div>-</div>\n                    } else {\n                        return <div>{timestampToDate(text)}</div>\n                    }\n                }\n            },\n            {\n                title: \"审批意见\",\n                dataIndex: \"deleteReason\",\n                key: \"deleteReason\"\n            },\n            {\n                title: \"超时时间\",\n                dataIndex: \"claimTime\",\n                key: \"claimTime\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let { processDefinitionId, processInstanceId ,axiosType} = this.props;\n        let hisTasklistData = await sendBpmTaskAJAX(axiosType, {\n            processDefinitionId,\n            processInstanceId\n        });\n        this.setState({\n            data: hisTasklistData.data.data\n        });\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有流程历史数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n        />);\n    }\n}\nBpmTable.propTypes = propTypes;\nBpmTable.defaultProps = {\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\",\n    axiosType:'hisTasklist' //默认查询历史记录\n}\nexport default BpmTable;\n","/**\n * bpm流程图组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst propTypes = {\n    url: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n};\n\nclass BpmFlowChart extends Component {\n    render() {\n        let { processDefinitionId, processInstanceId, width, height, url } = this.props;\n        return (\n            <div>\n                <iframe\n                    style={{ width, height, \"minHeight\": \"300px\" }}\n                    src={`${url}?processDefinitionId=${processDefinitionId}&processInstanceId=${processInstanceId}`}\n                    frameBorder=\"0\"\n                >\n                </iframe>\n            </div>\n        );\n    }\n}\nBpmFlowChart.propTypes = propTypes;\nBpmFlowChart.defaultProps = {\n    url: \"/eiap-plus/vendor/diagram-viewer/index.html\",\n    width: \"99%\",\n    height: \"300px\",\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\"\n}\n\nexport default BpmFlowChart;","/**\n * bpm流程任务审批组件\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Col, Message, Modal, Radio, Row, Table } from 'tinper-bee';\nimport createModal from 'yyuap-ref';\nimport { approvetypeToText, sendBpmTaskAJAX } from './common';\nimport refOptions from './refOptions';\n\nconst propTypes = {\n    id: PropTypes.string,\n    appType: PropTypes.string,\n    refCode: PropTypes.string,\n    onBpmFlowClick: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n};\n\nclass BpmTaskApproval extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            approvetype: \"agree\",\n            comment: \"审批同意\",\n            processDefinitionId: props.processDefinitionId,\n            processInstanceId: props.processInstanceId,\n            taskId: props.id,\n            activityId: \"markerbill\",\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: [],\n            userIds: [],\n            userId: null,\n            HuoDongID: \"\",//新版活动ID\n            HuoDongName: \"\"//新版活动名字\n        }\n        //驳回到环节的Modal-Table\n        this.rejectToActivityCol = [{\n            title: \"活动编码\",\n            dataIndex: \"activityId\",\n            key: \"activityId\",\n            width: \"40%\"\n        },\n        {\n            title: \"活动名称\",\n            dataIndex: \"activityName\",\n            key: \"activityName\",\n            width: \"30%\"\n        }]\n    }\n    componentWillMount = () => {\n        //通过billID获得processDefinitionId,processInstanceId\n        // let pID = await billidToIds('f39234a2-ed92-473f-b7c1-45f71559facb');\n    }\n    componentDidMount = () => {\n        //传入类型是弃审，那么直接设置2\n        if (this.props.appType == \"2\") {\n            this.setState({\n                approvetype: \"withdraw\",\n                comment: approvetypeToText(\"withdraw\")\n            });\n        }\n    }\n\n    //选择审批的类型\n    handleChange = (value) => {\n        this.setState({ approvetype: value, comment: approvetypeToText(value) });\n    }\n    //绑定审批意见\n    handlerCommentChange = (e) => {\n        this.setState({ comment: e.target.value });\n    }\n    //审批提交\n    handlerSubmitBtn = async () => {\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        if (this.state.comment == \"\") {\n            Message.create({ content: '不能为空', color: 'danger', position: 'top' });\n            return;\n        }\n        onStart && onStart();\n        //第一次请求审批，有的是直接一次请求，有的需要二次请求\n        let result = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n        //检测需要二次请求并弹出Modal审批\n        switch (this.state.approvetype) {\n            case 'agree'://同意\n            case 'unagree'://不同意\n                //普通同意操作，没有后续操作，直接成功\n                if (result.data.flag == 'success') {\n                    Message.create({ content: result.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else if (result.data.flag == 'faile') {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                //普通同意操作，有后续操作，有加签人员判断\n                if (result.data.assignAble) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.assignList.length > 0) {\n                        this.setState({\n                            HuoDongID: result.data.assignList[0].activityId,\n                            HuoDongName: result.data.assignList[0].activityName\n                        });\n                    }\n                    // onStart && onStart();\n                    //可以是加签操作，拉取加签请求\n                    onEnd && onEnd();\n                    //配置参照需要参数\n                    var options = Object.assign(JSON.parse(refOptions), {\n                        title: '人员选择',\n                        backdrop: false,\n                        hasPage: true,\n                        refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                        isRadio: false,\n                        className: '',\n                        param: {//url请求参数\n                            refCode: this.props.refCode,\n                            tenantId: '',\n                            sysId: '',\n                            transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                        },\n                        //选择中的数据\n                        keyList: [],\n                        //保存回调sels选中的行数据showVal显示的字\n                        onSave: async (sels, showVal) => {//showVal=\"12;13;管理员\"\n                            //回调\n                            onStart && onStart();\n                            //同意后续的加签\n                            //TO DO:重构URL\n                            var agreeeMsg = await sendBpmTaskAJAX('commit', {\n                                activityId: this.state.HuoDongID,\n                                activityName: this.state.HuoDongName,\n                                comment: this.state.comment,\n                                taskId: this.state.taskId,\n                                approvetype: this.state.approvetype,\n                                processInstanceId: this.state.processInstanceId,\n                                participants: Array.from(sels, x => ({ id: x.id }))\n                            }).catch((e) => {\n                                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: `服务器请求出错`\n                                });\n                            });\n                            //确认加签后的处理\n                            if (agreeeMsg.data.flag == 'success') {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'info', position: 'top' });\n                                this.setState({\n                                    rejectlist: [],\n                                    selectedRow: []\n                                });\n                                onSuccess && onSuccess();\n                            } else {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: agreeeMsg.data.msg\n                                });\n                            }\n                        },\n                        showVal: '',\n                        showKey: 'refname',\n                        verification: false\n                    });\n                    //弹出参照组件\n                    createModal(options);\n                }\n                break;\n            //驳回到环节\n            case 'rejectToActivity':\n                if (result.data.flag == 'success') {\n                    onEnd && onEnd();\n                    this.setState({\n                        rejectlist: result.data.rejectlist,\n                        selectedRow: new Array(result.data.rejectlist.length),\n                        rejectToActivityShow: true\n                    });\n                } else {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                break;\n            //加签\n            case 'signAdd':\n                if (result.data.status == 1) {\n                    onEnd && onEnd();\n                    //配置参照需要参数\n                    var options = Object.assign(JSON.parse(refOptions), {\n                        title: '加签人员',\n                        backdrop: false,\n                        hasPage: true,\n                        refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                        isRadio: false,\n                        className: '',\n                        param: {//url请求参数\n                            refCode: this.props.refCode,\n                            tenantId: '',\n                            sysId: '',\n                            transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                        },\n                        //选择中的数据\n                        keyList: [],\n                        //保存回调sels选中的行数据showVal显示的字\n                        onSave: async (sels, showVal) => {//showVal=\"12;13;管理员\"\n                            //回调\n                            onStart && onStart();\n                            //TO DO:重构URL\n                            //执行最终加签操作\n                            var signAddMsg = await sendBpmTaskAJAX('signaddtask', {\n                                approvetype: this.state.approvetype,\n                                comment: this.state.comment,\n                                processInstanceId: this.state.processInstanceId,\n                                taskId: this.state.taskId,\n                                userIds: Array.from(sels, x => x.id)\n                            }).catch((e) => {\n                                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: `服务器请求出错`\n                                });\n                            });\n                            //判断加签最终是否成功\n                            if (signAddMsg.data.flag == 'success') {\n                                Message.create({ content: `${signAddMsg.data.msg}`, color: 'info', position: 'top' });\n                                onSuccess && onSuccess();\n                            } else {\n                                Message.create({ content: `${signAddMsg.data.msg}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: signAddMsg.data.msg\n                                });\n                            }\n                        },\n                        showVal: '',\n                        showKey: 'refname',\n                        verification: false\n                    });\n                    //弹出参照组件\n                    createModal(options);\n                } else {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                break;\n            //改派\n            case 'delegate':\n                if (result.data.status == 1) {\n                    onEnd && onEnd();\n                    //配置参照需要参数\n                    var options = Object.assign(JSON.parse(refOptions), {\n                        title: '改派人员',\n                        backdrop: false,\n                        hasPage: true,\n                        refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                        isRadio: true,\n                        className: '',\n                        param: {//url请求参数\n                            refCode: this.props.refCode,\n                            tenantId: '',\n                            sysId: '',\n                            transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                        },\n                        //选择中的数据\n                        keyList: [],\n                        //保存回调sels选中的行数据showVal显示的字\n                        onSave: async (sels, showVal) => {//showVal=\"12;13;管理员\"\n                            //回调\n                            onStart && onStart();\n                            //TO DO:重构URL\n                            let delegateMsg = await sendBpmTaskAJAX('delegatetask', {\n                                approvetype: this.state.approvetype,\n                                comment: this.state.comment,\n                                processInstanceId: this.state.processInstanceId,\n                                taskId: this.state.taskId,\n                                userId: Array.isArray(sels) ? sels[0].id : \"\"\n                            }).catch((e) => {\n                                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: `服务器请求出错`\n                                });\n                            });\n                            //处理后续的操作\n                            if (delegateMsg.data.flag == 'success') {\n                                Message.create({ content: `${delegateMsg.data.msg}`, color: 'info', position: 'top' });\n                                onSuccess && onSuccess();\n                            } else {\n                                Message.create({ content: `${delegateMsg.data.msg}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: delegateMsg.data.msg\n                                });\n                            }\n                        },\n                        showVal: '',\n                        showKey: 'refname',\n                        verification: false\n                    });\n                    //弹出参照组件\n                    createModal(options);\n                } else {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                break;\n\n            //所有都不满足的话那就是只有一次请求直接给出提示\n            default:\n                if (result.data.flag == 'success') {\n                    Message.create({ content: result.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                break;\n        }\n    }\n    //通用关闭方法\n    activityModalClose = () => {\n        this.setState({\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: []\n        });\n    }\n    //驳回到环节的最终提交\n    rejectToActivityOK = async () => {\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        onStart && onStart();\n        let rejectToBillMakerMsg = await sendBpmTaskAJAX('rejectToBillMaker', {\n            activityId: this.state.activityId,\n            approvetype: this.state.approvetype,\n            comment: this.state.comment,\n            processInstanceId: this.state.processInstanceId,\n            taskId: this.state.taskId\n        }).catch((e) => {\n            Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: `服务器请求错误`\n            });\n        });\n\n        if (rejectToBillMakerMsg.data.flag == 'success') {\n            onSuccess && onSuccess();\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'info', position: 'top' });\n            this.setState({\n                rejectToActivityShow: false,\n                rejectlist: [],\n                selectedRow: []\n            });\n        } else {\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: rejectToBillMakerMsg.data.msg\n            });\n        }\n    }\n    //流程图函数调用\n    handlerFlow = () => {\n        let onBpmFlowClick = this.props.onBpmFlowClick;\n        onBpmFlowClick && onBpmFlowClick();\n    }\n    render() {\n        return (\n            <div className=\"clearfix\">\n                <div style={{ \"padding\": \"0px\" }}>\n                    {this.props.appType == \"1\" && <div>\n                        <Row style={{\n                            \"height\": \"46px\",\n                            \"lineHeight\": \"46px\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={8}>\n                                <Radio.RadioGroup\n                                    name=\"approvetype\"\n                                    selectedValue={this.state.approvetype}\n                                    onChange={this.handleChange}>\n                                    <Radio value=\"agree\">同意</Radio>\n                                    <Radio value=\"unagree\">不同意</Radio>\n                                    <Radio value=\"rejectToActivity\">驳回到环节</Radio>\n                                    <Radio value=\"rejectToBillMaker\">驳回到制单人</Radio>\n                                    <Radio value=\"signAdd\">加签</Radio>\n                                    <Radio value=\"delegate\">改派</Radio>\n                                </Radio.RadioGroup>\n                            </Col>\n                            <Col md={4} style={{ \"textAlign\": \"right\" }}>\n                                {this.props.appType == \"1\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}\n                                {this.props.appType == \"1\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入处理意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                    {this.props.appType == \"2\" && <div>\n                        <Row style={{\n                            \"height\": \"46px\",\n                            \"lineHeight\": \"46px\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={8}>\n                                <Radio.RadioGroup\n                                    name=\"approvetype\"\n                                    selectedValue={this.state.approvetype}\n                                    onChange={this.handleChange}>\n                                    <Radio value=\"withdraw\">弃审</Radio>\n                                </Radio.RadioGroup>\n                            </Col>\n                            <Col md={4} style={{ \"textAlign\": \"right\" }}>\n                                {this.props.appType == \"2\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}\n                                {this.props.appType == \"2\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入弃审意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                </div>\n                <Modal\n                    show={this.state.rejectToActivityShow}\n                    backdrop={false}\n                    onHide={this.activityModalClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title> 活动列表 </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table\n                            rowKey={(r) => r.activityId}\n                            emptyText={() => (<div>暂无数据</div>)}\n                            rowClassName={(record, index, indent) => {\n                                if (this.state.selectedRow[index]) {\n                                    return 'selected';\n                                } else {\n                                    return '';\n                                }\n                            }}\n                            onRowClick={(record, index, indent) => {\n                                let selectedRow = new Array(this.state.rejectlist.length);\n                                selectedRow[index] = true;\n                                this.setState({\n                                    activityId: record.activityId,\n                                    selectedRow: selectedRow\n                                });\n                            }}\n                            columns={this.rejectToActivityCol} data={this.state.rejectlist} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button colors=\"danger\" style={{ \"marginRight\": \"10px\" }} onClick={this.rejectToActivityOK}> 确定 </Button>\n                        <Button onClick={this.activityModalClose}> 关闭 </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\nBpmTaskApproval.propTypes = propTypes;\nBpmTaskApproval.defaultProps = {\n    appType: \"1\",\n    refCode: \"newuser\"\n}\n\nexport default BpmTaskApproval;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Demo from './demo';\n\nReactDOM.render(<Demo />, document.querySelector(\"#app\"));","import React, { Component } from 'react';\nimport { Button } from 'tinper-bee';\nimport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign\n} from './index';\n\nimport 'tinper-bee/assets/tinper-bee.css';\n// import './index.less';\n\nclass Demo extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <BpmTaskApprovalWrap\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                    appType=\"1\"\n                    id=\"3be26f2debb442d9b5f8012ba40c3fa3\"\n                />\n                <BpmLinkAssign />\n                <BpmFlowChart\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTable\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTestCheckTable />\n                <BpmButtonSubmit\n                    funccode=\"ygdemo_yw_info\"\n                    nodekey=\"003\"\n                    size=\"lg\"\n                    isOne={false}\n                    url={`/ygdemo_yw_info/submit`}\n                    urlAssignSubmit={`/ygdemo_yw_info/assignSubmit`}\n                    checkedArray={\n                        [\n                            { \"id\": \"ea69b9bf-d8b5-47a7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 },\n                            { \"id\": \"ea69b9bf-d8sssa7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 }\n                        ]\n                    }\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-up'></i>提交\n                    </Button>\n                </BpmButtonSubmit>\n                <BpmButtonRecall\n                    url={`/iuap_pap_quickstart/example_workorder/recall`}\n                    checkedArray={\n                        [\n                            {\n                                \"id\": \"ccb34c6d3fc349789be73678d7cc8fac\",\n                                \"createTime\": \"2018-07-04 12:36:26 088\",\n                                \"createUser\": \"U001\",\n                                \"lastModified\": \"2018-07-04 12:36:26 088\",\n                                \"lastModifyUser\": \"U001\",\n                                \"ts\": \"2018-07-04 12:36:26 088\",\n                                \"dr\": 0,\n                                \"bpmState\": 1,\n                                \"taskKey\": null,\n                                \"taskId\": null,\n                                \"processInstanceId\": null,\n                                \"processDefineCode\": null,\n                                \"comment\": null,\n                                \"orderCode\": \"201807042036265\",\n                                \"orderName\": null,\n                                \"supplier\": null,\n                                \"supplierName\": \"11\",\n                                \"type\": \"0\",\n                                \"purchasing\": \"22\",\n                                \"purchasingGroup\": \"22\",\n                                \"voucherDate\": 1530633600000,\n                                \"approvalState\": null,\n                                \"confirmState\": null,\n                                \"closeState\": null,\n                                \"type_name\": \"投诉工单\",\n                                \"approvalState_name\": null,\n                                \"confirmState_name\": null,\n                                \"closeState_name\": null,\n                                \"remark\": null,\n                                \"bpmBillCode\": null\n                            }\n                        ]\n                    }\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-down'></i>收回\n                    </Button>\n                </BpmButtonRecall>\n            </div>\n        );\n    }\n}\n\nexport default Demo;\n","import BpmTable from './BpmTable';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport BpmTestCheckTable from './BpmTestCheckTable';\nimport BpmWrap from './BpmWrap';\nimport BpmTaskApprovalWrap from './BpmTaskApprovalWrap';\nimport BpmButtonSubmit from './BpmButtonSubmit';\nimport BpmButtonRecall from './BpmButtonRecall';\nimport BpmLinkAssign from './BpmLinkAssign';\n\n\nexport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign\n}","/**\n * 核心功能函数处理类\n */\n\nimport axios from 'axios';\nimport { Message } from 'tinper-bee';\n\n/**\n * 后端时间戳转换正常日期时间\n * @param {*} _stamp 时间戳\n * @param {*} formatStr 日期格式\n */\nexport const timestampToDate = (_stamp, formatStr = 'yyyy-MM-dd  hh:mm:ss') => {\n    let unixTimestamp = new Date(_stamp);\n    {\n        var str = formatStr;\n        var Week = ['日', '一', '二', '三', '四', '五', '六'];\n\n        str = str.replace(/yyyy|YYYY/, unixTimestamp.getFullYear());\n        str = str.replace(/yy|YY/, (unixTimestamp.getYear() % 100) > 9 ? (unixTimestamp.getYear() % 100).toString() : '0' + (unixTimestamp.getYear() % 100));\n        var month = unixTimestamp.getMonth() + 1;\n        str = str.replace(/MM/, month > 9 ? month.toString() : '0' + month);\n        str = str.replace(/M/g, month);\n\n        str = str.replace(/w|W/g, Week[unixTimestamp.getDay()]);\n\n        str = str.replace(/dd|DD/, unixTimestamp.getDate() > 9 ? unixTimestamp.getDate().toString() : '0' + unixTimestamp.getDate());\n        str = str.replace(/d|D/g, unixTimestamp.getDate());\n\n        str = str.replace(/hh|HH/, unixTimestamp.getHours() > 9 ? unixTimestamp.getHours().toString() : '0' + unixTimestamp.getHours());\n        str = str.replace(/h|H/g, unixTimestamp.getHours());\n        str = str.replace(/mm/, unixTimestamp.getMinutes() > 9 ? unixTimestamp.getMinutes().toString() : '0' + unixTimestamp.getMinutes());\n        str = str.replace(/m/g, unixTimestamp.getMinutes());\n\n        str = str.replace(/ss|SS/, unixTimestamp.getSeconds() > 9 ? unixTimestamp.getSeconds().toString() : '0' + unixTimestamp.getSeconds());\n        str = str.replace(/s|S/g, unixTimestamp.getSeconds());\n        return str;\n    }\n}\n\n/**\n * 流程历史表格描述转换\n */\nexport const descriptionToText = (vApproveType) => {\n    if (vApproveType == 'submit') {\n        return '提交';\n    }\n    if (vApproveType == 'agree') {\n        return '审批';\n    }\n    if (vApproveType == 'unagree') {\n        return '不同意';\n    }\n    if (vApproveType == 'reject') {\n        return '驳回';\n    }\n    if (vApproveType == 'signAdd') {\n        return '加签';\n    }\n    if (vApproveType == 'signAdding') {\n        return '加签中';\n    }\n    if (vApproveType == 'delegate') {\n        return '改派';\n    }\n    if (vApproveType == 'termination') {\n        return '终止';\n    }\n    if (vApproveType == 'withdraw') {\n        return '删除';\n    }\n    if (vApproveType == 'postCompleted') {\n        return '审批';\n    }\n}\n\n/**\n * 获得处理URL\n */\nexport const getBpmTaskURL = (type, root = \"/eiap-plus/\") => {\n    switch (type) {\n        case 'agree':\n            return root + 'task/completetask/approveCard';\n        case 'unagree':\n            return root + 'task/completetask/approveCard';\n        case 'rejectToActivity':\n            return root + 'task/rejecttask/bfreject';\n        case 'rejectToBillMaker':\n            return root + 'task/rejecttask/reject';\n        case 'signAdd':\n            return root + 'task/assignee/getlist';\n        case 'delegate':\n            return root + 'task/assignee/getlist';\n        case 'withdraw':\n            return root + 'task/withdrawtask/withdraw';\n        case 'hisTasklist':\n            return root + 'process/hisTasklist';\n        case 'commit':\n            return root + 'task/assigntask/commit';\n        case 'signaddtask':\n            return root + 'task/signaddtask/signadd';\n        case 'delegatetask':\n            return root + 'task/delegatetask/delegate';\n        default:\n            return \"/\"\n            break;\n    }\n}\n\n/**\n * 发送异步\n */\nexport const sendBpmTaskAJAX = (type, data) => {\n    switch (type) {\n        case 'agree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'unagree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToActivity':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToBillMaker':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signAdd':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegate':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'withdraw':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'hisTasklist':\n            return axios.post(getBpmTaskURL(type), {\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'commit':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                activityName: data.activityName,\n                comment: data.comment,\n                taskId: data.taskId,\n                approvetype: data.approvetype,\n                processInstanceId: data.processInstanceId,\n                participants: data.participants\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signaddtask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userIds: data.userIds\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegatetask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userId: data.userId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n\n        default:\n            break;\n    }\n    return axios.post(getBpmTaskURL(type), data).catch((e) => {\n        Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n    })\n}\n\n/**\n * 通过billID获得流程图参数\n */\nexport const billidToIds = (billId) => {\n    return axios.post('/eiap-plus/process/getbillbpm', {\n        billId\n    });\n}\n/**\n * 查询数据\n */\nexport const queryBpmTemplateAllocate = (obj) => {\n    return axios.get(`/eiap-plus/appResAllocate/queryBpmTemplateAllocate?_=${Math.random()}`, {\n        params: {\n            funccode: obj.funccode,\n            nodekey: obj.nodekey\n        }\n    });\n}\n/**\n * 提交流程\n */\nexport const onCommit = (data) => {\n    return axios({\n        url: `${data.url}`,\n        method: \"post\",\n        data: data['submitArray'],\n        params: { \"processDefineCode\": data['processDefineCode'] }\n    });\n}\n/**\n * 收回流程\n */\nexport const onRecall = (url, data) => {\n    return axios({\n        url: `${url}`,\n        method: \"post\",\n        data: data\n    });\n}\n\n/**\n * 审批状态类型返回默认审批文案\n */\nexport const approvetypeToText = (type) => {\n    switch (type) {\n        case 'agree':\n            return '审批同意';\n        case 'unagree':\n            return '审批不同意';\n        case 'rejectToActivity':\n            return '驳回到环节';\n        case 'rejectToBillMaker':\n            return '驳回到制单人';\n        case 'signAdd':\n            return '加签';\n        case 'delegate':\n            return '改派';\n        case 'withdraw':\n            return '弃审';\n        default:\n            break;\n    }\n}\n\n/**\n * Unicode编码转换\n */\nexport const reconvert = (str) => {\n    str = str.replace(/(\\\\u)(\\w{1,4})/gi, function ($0) {\n        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\\w{1,4})/g, \"$2\")), 16)));\n    });\n    str = str.replace(/(&#x)(\\w{1,4});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\\w{1,4})(%3B)/g, \"$2\"), 16));\n    });\n    str = str.replace(/(&#)(\\d{1,6});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23)(\\d{1,6})(%3B)/g, \"$2\")));\n    });\n\n    return str;\n}","/**\n * 模拟任务中心测试组件\n */\n\nimport React, { Component } from 'react';\nimport { Table, Row, Col, Button } from 'tinper-bee';\nimport axios from 'axios';\n\nclass BpmTestCheckTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            factoryValue: {}\n        };\n        this.columns = [\n            {\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n                width: \"30%\"\n            },\n            {\n                title: \"ID\",\n                dataIndex: \"id\",\n                key: \"id\"\n            },\n            {\n                title: \"processDefinitionId\",\n                dataIndex: \"processDefinitionId\",\n                key: \"processDefinitionId\"\n            },\n            {\n                title: \"processInstanceId\",\n                dataIndex: \"processInstanceId\",\n                key: \"processInstanceId\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let hisTasklist = `eiap-plus/process/undoTasklist`;\n        let hisTasklistData = await axios.post(hisTasklist, { \"draw\": 1, \"length\": 10, \"order\": {}, \"search\": { \"search_EQ_code\": \"\", \"undefined\": \"\", \"processDefinitionName\": \"\", \"billno\": \"\" }, \"searchconfirm\": {} });\n        if (Array.isArray(hisTasklistData.data.data)) {\n            this.setState({\n                data: hisTasklistData.data.data\n            });\n        }\n\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n            title={() => <Button colors=\"primary\" onClick={() => {\n                //document.location.hash = `#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                document.location.hash = `#/bdm/bpmapproval?id=${this.state.factoryValue.id}&processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                //window.open(`http://127.0.0.1:3000/#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`);\n            }}>任务中心打开审批</Button>}\n            onRowClick={(record, index, indent) => {\n                this.setState({\n                    factoryValue: record\n                });\n            }}\n        />);\n    }\n}\n\nexport default BpmTestCheckTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row } from 'tinper-bee';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTable from './BpmTable';\nimport { billidToIds } from './common';\n\n\nconst propTypes = {\n    id: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n\n}\nclass BpmWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            processDefinitionId: \"\",\n            processInstanceId: \"\"\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            let { processDefinitionId, processInstanceId } = pID.data;\n            this.setState({\n                processDefinitionId,\n                processInstanceId\n            });\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmFlowChart\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmTable\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\nBpmWrap.propTypes = propTypes;\nBpmWrap.defaultProps = {\n    id: \"\"\n}\nexport default BpmWrap;\n","/**\n * 审批逻辑组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row, Button } from 'tinper-bee';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport { billidToIds } from './common';\n\n\nconst propTypes = {\n    id: PropTypes.string,\n    refCode: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    onBpmFlowClick: PropTypes.func,\n    appType: PropTypes.string,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n}\nclass BpmTaskApprovalWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isShowFlowBtn: false,\n            id: \"\",\n            taskId: \"\",\n            processDefinitionId: \"\",\n            processInstanceId: \"\"\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            if (pID.data.message && pID.data.message == 'NoBpm') {\n                // console.log('NoBpm');\n                this.setState({\n                    isShowFlowBtn: false\n                });\n            } else if (pID.data.taskId) {\n                let { processDefinitionId, processInstanceId, taskId } = pID.data;\n                this.setState({\n                    id: taskId,\n                    processDefinitionId,\n                    processInstanceId\n                });\n            } else {\n                this.setState({\n                    isShowFlowBtn: true\n                });\n            }\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId,\n                id: this.props.id\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"clearfix\">\n                {this.state.processDefinitionId && <Row>\n                    <Col md={12}>\n                        <BpmTaskApproval\n                            id={this.state.id}\n                            refCode={this.props.refCode}\n                            onBpmFlowClick={this.props.onBpmFlowClick}\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                            appType={this.props.appType}\n                            onStart={this.props.onStart}\n                            onEnd={this.props.onEnd}\n                            onSuccess={this.props.onSuccess}\n                            onError={this.props.onError}\n                        />\n                    </Col>\n                </Row>}\n                {this.state.isShowFlowBtn && <Row>\n                    <Col mdOffset={11} md={1} style={{ \"textAlign\": \"right\" }}>\n                        <Button onClick={this.props.onBpmFlowClick} style={{ \"marginBottom\": \"4px\", \"marginRight\": \"15px\" }} colors=\"primary\">流程图</Button>\n                    </Col>\n                </Row>}\n            </div>\n        );\n    }\n}\nBpmTaskApprovalWrap.propTypes = propTypes;\nBpmTaskApprovalWrap.defaultProps = {\n    id: \"\",\n    appType: \"1\",\n    refCode: \"newuser\"\n}\nexport default BpmTaskApprovalWrap;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert } from './common';\nimport refOptions from './refOptions';\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    size: PropTypes.string,\n    scrollY: PropTypes.number,\n    isOne: PropTypes.bool,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonSubmit extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: [],//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [],\n            editRowIndex: 0,\n            showVal: []\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, isOne, onStart, onEnd, onSuccess, onError } = this.props;\n        //检查是否多单据提交\n        if (isOne && checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            huanjieList: result.data.detailMsg.data.assignedActivities,\n                            obj: checkedArray,\n                            assignInfo: {\n                                assignInfoItems: Array.from(result.data.detailMsg.data.assignedActivities, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj } = this.state;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            }\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n        return (<span>\n            <span onClick={this.handlerBtn}>\n                {\n                    this.props.children\n                }\n            </span>\n            <Modal\n                size={this.props.size}\n                show={this.state.huanjieShow}\n                backdrop={false}\n                enforceFocus={false}\n                onHide={this.closeHuanjie}>\n                <Modal.Header closeButton>\n                    <Modal.Title> 环节指派 </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Table\n                        scroll={{ y: this.props.scrollY }}\n                        emptyText={() => (<span>暂无环节</span>)}\n                        rowKey={record => record.id}\n                        columns={huanjieCol}\n                        data={this.state.huanjieList}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button colors=\"primary\" style={{ \"marginRight\": \"10px\" }} onClick={this.huanjieHandlerOK}> 确定 </Button>\n                    <Button onClick={this.closeHuanjie}> 关闭 </Button>\n                </Modal.Footer>\n            </Modal>\n        </span>);\n    }\n}\nBpmButtonSubmit.propTypes = propTypes;\nBpmButtonSubmit.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    size: \"\",\n    scrollY: 270,\n    isOne: false\n}\nexport default BpmButtonSubmit;\n","/**\n * bpm 收回流程按钮\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { onRecall } from './common';\n\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    url: PropTypes.string,\n    data: PropTypes.array,\n    className: PropTypes.string,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonRecall extends Component {\n    constructor() {\n        super();\n    }\n    /**\n     * 收回操作事件\n     */\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        let recallArray = [];\n        //操作数据至少有一个\n        if (checkedArray.length > 0) {\n            checkedArray.forEach(da => {\n                if (da.bpmState != 0 && da.bpmState != null) {\n                    recallArray.push({ id: da.id });\n                }else {\n                    onError && onError({\n                        type: 1,\n                        msg: `流程没有启动无法撤回`\n                    });\n                }\n            });\n        } else {\n            // 弹出提示请选择数据\n            onError && onError({\n                type: 1,\n                msg: `请选择单据才能撤回`\n            });\n            return;\n        }\n        if (recallArray.length > 0) {\n            onStart && onStart();\n            let { data: { success, detailMsg } } = await onRecall(this.props.url, recallArray);\n            if (detailMsg.data['success'] && detailMsg.data.success == 'success') {\n                onSuccess && onSuccess();\n            } else {\n                onError && onError({\n                    type: 2,\n                    msg: detailMsg.data.message\n                });\n            }\n        }\n    }\n    render() {\n        return (<span onClick={this.handlerBtn}>\n            {\n                this.props.children\n            }\n        </span>);\n    }\n}\nBpmButtonRecall.propTypes = propTypes;\nBpmButtonRecall.defaultProps = {\n    checkedArray: [],\n    url: \"/example/ygdemo_yw_info/unsubmit\",\n    data: [],\n    className: \"\"\n}\nexport default BpmButtonRecall;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert } from './common';\nimport refOptions from './refOptions';\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    scrollY: PropTypes.number,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmLinkAssign extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: {},//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [\n                { \"id\": \"approveUserTask3283\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3183\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3a83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3s83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask32d3\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3zza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTasqzza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask34za83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTas43zza83\", \"name\": \"1\", \"type\": \"userTask\" }\n            ],\n            editRowIndex: 0,\n            showVal: []\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        //检查只能一条单据提交流程\n        if (checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            huanjieList: result.data.detailMsg.data.assignedActivities,\n                            obj: checkedArray[0],\n                            assignInfo: {\n                                assignInfoItems: Array.from(result.data.detailMsg.data.assignedActivities, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj } = this.state;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            }\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n        return (<Table\n            loading={false}\n            scroll={{ y: this.props.scrollY }}\n            emptyText={() => (<span>暂无环节</span>)}\n            rowKey={record => record.id}\n            columns={huanjieCol}\n            data={this.state.huanjieList}\n        />);\n    }\n}\nBpmLinkAssign.propTypes = propTypes;\nBpmLinkAssign.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    scrollY: 270\n}\nexport default BpmLinkAssign;\n","let option = {\n    title: '',\n    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n    className: '',\n    param: {//url请求参数\n        refCode: 'bd_common_user',\n        tenantId: '',\n        sysId: '',\n        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n    },\n    refModelUrl: {\n        TreeUrl: '/newref/rest/iref_ctr/blobRefTree', //树请求\n        TableBodyUrl: '/newref/rest/iref_ctr/blobRefTreeGrid',//表体请求//ref/rest/iref_ctr/blobRefTreeGrid\n        TableBarUrl: '/newref/rest/iref_ctr/refInfo',//表头请求ref/rest/iref_ctr/refInfo\n    },\n    filterRefUrl: '/iuap_pap_quickstart/common/filterRef',//get\n    // keyList:['123'],//选中的key\n\n    // checkedArray: [],\n    onCancel: function (p) {\n        console.log(p)\n    },\n    filterKey: [{ title: '人员名称人员名称人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }],\n    textOption: {\n        modalTitle: '选择品类',\n        leftTitle: '品类结构',\n        rightTitle: '品类列表',\n        leftTransferText: '待选品类',\n        rightTransferText: '已选品类',\n        leftInfo: [{ text: '流水号', key: 'peoname' }, { text: '品类编码', key: 'institid' }, { text: '品类描述', key: 'refname' }],\n        rightInfo: [{ text: '流水号', key: 'id' }, { text: '品类编码', key: 'id' }, { text: '品类描述', key: 'peocode' }],\n    }\n}\n\n\nexport default JSON.stringify(option)\n"],"sourceRoot":""}