{"version":3,"sources":["webpack:///./src/BpmCopyContent.js","webpack:///./src/BpmTable.js","webpack:///./src/BpmTaskApproval.js","webpack:///./src/BpmTaskCopyPanel.js","webpack:///./src/app.js","webpack:///./src/demo.js","webpack:///./src/index.js","webpack:///./src/common.js","webpack:///./src/refOptions.js","webpack:///./src/BpmTestCheckTable.js","webpack:///./src/BpmWrap.js","webpack:///./src/BpmTaskApprovalWrap.js","webpack:///./src/BpmButtonSubmit.js","webpack:///./src/BpmButtonRecall.js","webpack:///./src/BpmLinkAssign.js","webpack:///./src/BpmFlowChart.js"],"names":["__webpack_require__","_react","_tinperBee","propTypes","className","PropTypes","string","filterRefUrl","organrefCode","positonrefCode","roleRef","userRef","onCopyusersChange","func","onintersectionChange","BpmCopyContent","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","_getPrototypeOf2","default","call","changeCheck","props","setState","intersection","state","childRefKey","userIds","processDefineCode","assignInfo","assignInfoItems","obj","huanjieShow","huanjieList","chaosongShow","editRowIndex","showVal","copyusers","copyuserShowVal","Component","self","labelStyle","height","lineHeight","width","padding","display","refcon","organRef","title","backdrop","hasPage","multiple","refType","isRadio","param","refCode","tenantId","sysId","transmitParam","keyList","onSave","sels","temp","map","v","id","slice","_from2","x","type","showKey","verification","positonRef","_react2","createElement","Row","Label","style","_refWithInput2","disabled","option","_assign2","JSON","parse","refOptions","marginTop","marginBottom","Checkbox","margin","checked","onChange","defaultProps","_common","processDefinitionId","processInstanceId","axiosType","BpmTable","_this2","componentDidMount","_asyncToGenerator","_regenerator2","mark","_callee","_this$props","hisTasklistData","wrap","_context","prev","next","sendBpmTaskAJAX","sent","data","stop","columns","dataIndex","key","render","text","record","index","descriptionToText","timestampToDate","Table","bordered","emptyText","appType","properties","object","onBpmFlowClick","onStart","onEnd","onSuccess","onError","onChangestate","BpmTaskApproval","componentWillMount","approvetype","comment","approvetypeToText","handleChange","value","userName","userId","handlerCommentChange","e","target","activityModalClose","rejectToActivityShow","rejectlist","selectedRow","rejectToActivityOK","rejectToBillMakerMsg","activityId","taskId","catch","Message","create","content","toString","color","position","msg","flag","handlerFlow","getDataSource","arr","_this$props$propertie","addsignAble","rejectAble","delegateAble","unagreeable","push","rejectToActivity","_callee2","result","_context2","length","Array","activityName","HuoDongID","HuoDongName","rejectToActivityCol","_this3","Col","md","xs","sm","paddingLeft","paddingRight","Select","placeholder","defaultValue","FormControl","readOnly","onClick","mdOffset","xsOffset","smOffset","textAlign","Button","colors","outline","resize","border","borderRadius","Radio","RadioGroup","name","selectedValue","Modal","show","onHide","Header","closeButton","Title","Body","rowKey","r","rowClassName","indent","onRowClick","Footer","marginRight","addSignAble","iscopytouser","assignAble","panelOpen","bool","reset","BpmTaskCopyPanel","open","Panel","borderBottom","header","float","fontSize","_classnames2","uf","uf-arrow-down","uf-arrow-right","collapsible","expanded","searchOpen","_BpmCopyContent2","_extends","selectResult","ReactDOM","_demo2","document","querySelector","_index","Demo","BpmTaskApprovalWrap","console","log","err","BpmLinkAssign","BpmFlowChart","BpmTestCheckTable","BpmButtonSubmit","funccode","nodekey","size","isOne","url","urlAssignSubmit","checkedArray","code","ly_code","ly_sm","zr_dw","zr_dw_name","zrr","xb_dw","xb_dw_name","xbr","begin_date","end_date","zy_cd","qt_ld","zbr","zbr_name","dbr","jfyq","db_info","jd_bl","rwpf","kpi_flag","kpi_level","create_name","create_name_name","create_time","update_name","update_name_name","update_time","unitid","unitid_name","id_ygdemo_yw_sub","metaDefinedName","namespace","status","changedPropertyNames","tenant_id","dr","ts","shape","BpmButtonRecall","createTime","createUser","lastModified","lastModifyUser","bpmState","taskKey","orderCode","orderName","supplier","supplierName","purchasing","purchasingGroup","voucherDate","approvalState","confirmState","closeState","type_name","approvalState_name","confirmState_name","closeState_name","remark","bpmBillCode","BpmWrap","_stamp","formatStr","arguments","undefined","unixTimestamp","Date","str","replace","getFullYear","getYear","month","getMonth","getDay","getDate","getHours","getMinutes","getSeconds","vApproveType","getBpmTaskURL","root","axios","post","participants","billidToIds","billId","queryBpmTemplateAllocate","get","Math","random","params","onCommit","_axios2","method","onRecall","getByFindProcessDefinitionId","processDefinitionKey","reconvert","$0","String","fromCharCode","parseInt","escape","refModelUrl","TreeUrl","TableBodyUrl","TableBarUrl","onCancel","p","filterKey","textOption","modalTitle","leftTitle","rightTitle","leftTransferText","rightTransferText","leftInfo","rightInfo","_stringify2","hisTasklist","draw","order","search","search_EQ_code","processDefinitionName","billno","searchconfirm","isArray","factoryValue","location","hash","pID","_pID$data","_BpmFlowChart2","_BpmTable2","_pID$data$currentActi","message","isShowFlowBtn","currentActivity","handlerSubmitBtn","_callee3","options","_this$state","signAddMsg","delegateMsg","res","_context3","abrupt","t0","assignList","_ref3","agreeeMsg","_x","_x2","apply","_yyuapRef2","s","_BpmTaskApproval2","_BpmTaskCopyPanel2","array","scrollY","number","getByProcessDefinitionId","_ref","_ref2","_ref2$data","handlerBtn","_ref4","_ref4$data","success","detailMsg","commitParam","_result","_result2","submitStatus","res_code","submitArray","assignedActivities","filter","item","startactivity","closeHuanjie","signAddOK","sourseArray","huanjieHandlerOK","_this$props2","concat","count","forEach","da","huanjieCol","_showVal","_childRefKey","participantsValidate","children","enforceFocus","scroll","y","left","top","recallArray","loading","_props","minHeight","src","frameBorder"],"mappings":"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","file":"js/main.856e3362.bundle.js","sourcesContent":["/**\n * bpm 提交流程按钮\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table ,Row,Label,Checkbox } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport refOptions from './refOptions';\nconst propTypes = {\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    organrefCode:PropTypes.string,\n    positonrefCode:PropTypes.string,\n    roleRef:PropTypes.string,\n    userRef:PropTypes.string,\n    onCopyusersChange: PropTypes.func,\n    onintersectionChange: PropTypes.func\n};\n\nclass BpmCopyContent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: [],//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [],\n            chaosongShow:false,//抄送显示\n            editRowIndex: 0,\n            showVal: [],\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true  //是否交集\n        }\n    }\n    changeCheck=()=> {\n        let {onintersectionChange} = this.props;\n        this.setState({intersection:!this.state.intersection},()=>{\n            onintersectionChange&&onintersectionChange(this.state.intersection);\n        });\n    }\n    render() {\n        let self = this;\n        const labelStyle={\n            \"height\": \"30px\",\n            \"lineHeight\": \"30px\",\n            \"width\": \"10%\",\n            \"padding\": \"15px\",\n            \"display\":\"inline\"\n        }\n        const refcon={\n            \"display\": \"inline-block\",\n            \"width\": \"36%\"\n        }\n        let organRef ={\n            title: '抄送部门选择',\n            backdrop: false,\n            hasPage: true,\n            multiple:true,\n            refType: 1,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.organrefCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[0]?self.state.copyusers[0]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[0] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[0]=Array.from(temp, x => ({ id: x ,type:`DEPTS`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[0],\n            showKey: 'refname',\n            verification: false\n        }\n        let positonRef ={\n            title: '抄送岗位选择',\n            backdrop: false,\n            hasPage: true,\n            multiple:true,\n            refType: 1,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.positonrefCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[1]?self.state.copyusers[1]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[1] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[1] = Array.from(temp, x => ({ id: x ,type:`POSTS`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[1],\n            showKey: 'refname',\n            verification: false\n        }\n        let roleRef={\n            title: '抄送角色选择',\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.roleRef,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[2]?self.state.copyusers[2]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[2] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[2] = Array.from(temp, x => ({ id: x ,type:`USERGROUP`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[2],\n            showKey: 'refname',\n            verification: false\n        }\n        let userRef ={\n            title: '抄送人员选择',\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: false,\n            filterRefUrl: self.props.filterRefUrl,\n            className: '',\n            param: {//url请求参数\n                refCode: self.props.refCode,\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.copyusers[3]?self.state.copyusers[3]:[],\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                var temp = sels.map(v => v.id);\n                //显示值\n                let copyuserShowVal = self.state.copyuserShowVal.slice();\n                copyuserShowVal[3] = showVal;\n                //选中的值\n                let copyusers = self.state.copyusers.slice();\n                copyusers[3] = Array.from(temp, x => ({ id: x ,type:`USER`}));\n                let {onCopyusersChange} = self.props;\n                onCopyusersChange && onCopyusersChange(copyusers);\n                self.setState({\n                    copyusers: copyusers,\n                    copyuserShowVal: copyuserShowVal,\n\n                });\n            },\n            showVal: self.state.copyuserShowVal[3],\n            showKey: 'refname',\n            verification: false\n        }\n        return (<div>\n                    <Row>\n                        <Label style={labelStyle} className={`refLabel`}>按部门:</Label>\n                        <div style={refcon}>\n                            <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions),organRef)} />\n                        </div>\n                        <Label style={labelStyle} className={`refLabel`}>按岗位:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions),positonRef)} />\n                        </div>\n                    </Row>\n                    <Row   style={{'marginTop':'15px','marginBottom':'15px'}}>\n                        <Label style={labelStyle} className={`refLabel`}>按角色:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions),roleRef)} />\n                        </div>\n                        <Label style={labelStyle} className={`refLabel`}>按用户:</Label>\n                        <div style={refcon}>\n                            <RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />\n                        </div>\n                    </Row>\n                    <Checkbox style={{ \"margin\": 0}} checked={this.state.intersection} onChange={this.changeCheck}>是否交集</Checkbox>\n        </div>);\n    }\n}\nBpmCopyContent.propTypes = propTypes;\nBpmCopyContent.defaultProps = {\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"role_new_table\",\n    userRef:\"newuser\"\n}\nexport default BpmCopyContent;\n","/**\n * bpm流程数据历史表格\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Table } from 'tinper-bee';\nimport { descriptionToText, sendBpmTaskAJAX, timestampToDate } from './common';\nconst propTypes = {\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    axiosType:PropTypes.string,//默认查询历史记录\n\n};\n\nclass BpmTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: []\n        };\n        this.columns = [\n            {\n                title: \"任务ID\",\n                dataIndex: \"id\",\n                key: \"id\",\n                width: \"30%\"\n            },\n            {\n                title: \"任务名称\",\n                dataIndex: \"name\",\n                key: \"name\"\n            },\n            {\n                title: \"任务类型\",\n                dataIndex: \"description\",\n                key: \"description\",\n                render: (text, record, index) => {\n                    return <div>{descriptionToText(text)}</div>\n                }\n            },\n            {\n                title: \"执行者\",\n                dataIndex: \"executionId\",\n                key: \"executionId\"\n            },\n            {\n                title: \"开始时间\",\n                dataIndex: \"startTime\",\n                key: \"startTime\",\n                render: (text, record, index) => {\n                    return <div>{timestampToDate(text)}</div>\n                }\n            },\n            {\n                title: \"结束时间\",\n                dataIndex: \"endTime\",\n                key: \"endTime\",\n                render: (text, record, index) => {\n                    if (text == null) {\n                        return <div>-</div>\n                    } else {\n                        return <div>{timestampToDate(text)}</div>\n                    }\n                }\n            },\n            {\n                title: \"审批意见\",\n                dataIndex: \"deleteReason\",\n                key: \"deleteReason\"\n            },\n            {\n                title: \"超时时间\",\n                dataIndex: \"claimTime\",\n                key: \"claimTime\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let { processDefinitionId, processInstanceId ,axiosType} = this.props;\n        let hisTasklistData = await sendBpmTaskAJAX(axiosType, {\n            processDefinitionId,\n            processInstanceId\n        });\n        this.setState({\n            data: hisTasklistData.data.data\n        });\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有流程历史数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n        />);\n    }\n}\nBpmTable.propTypes = propTypes;\nBpmTable.defaultProps = {\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\",\n    axiosType:'hisTasklist' //默认查询历史记录\n}\nexport default BpmTable;\n","/**\n * bpm流程任务审批组件\n */\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Col, Message, Modal, Radio, Row, Table,Select,FormControl} from 'tinper-bee';\nimport createModal from 'yyuap-ref';\nimport { approvetypeToText, sendBpmTaskAJAX } from './common';\nimport refOptions from './refOptions';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nconst propTypes = {\n    id: PropTypes.string,\n    appType: PropTypes.string,\n    refCode: PropTypes.string,\n    properties:PropTypes.object,\n    onBpmFlowClick: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onChangestate:PropTypes.func\n};\n\nclass BpmTaskApproval extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            approvetype: \"agree\",\n            comment: \"审批同意\",\n            processDefinitionId: props.processDefinitionId,\n            processInstanceId: props.processInstanceId,\n            taskId: props.id,\n            activityId: \"\",\n            activityName:\"\",\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: [],\n            userIds: [],\n            userId: [],\n            userName:[],\n            HuoDongID: \"\",//新版活动ID\n            HuoDongName: \"\"//新版活动名字\n        }\n        //驳回到环节的Modal-Table\n        this.rejectToActivityCol = [{\n            title: \"活动编码\",\n            dataIndex: \"activityId\",\n            key: \"activityId\",\n            width: \"40%\"\n        },\n        {\n            title: \"活动名称\",\n            dataIndex: \"activityName\",\n            key: \"activityName\",\n            width: \"30%\"\n        }]\n    }\n    componentWillMount = () => {\n        //通过billID获得processDefinitionId,processInstanceId\n        // let pID = await billidToIds('f39234a2-ed92-473f-b7c1-45f71559facb');\n    }\n    componentDidMount = () => {\n        //传入类型是弃审，那么直接设置2\n        if (this.props.appType == \"2\") {\n            this.setState({\n                approvetype: \"withdraw\",\n                comment: approvetypeToText(\"withdraw\")\n            },()=>{\n                this.props.onChangestate(this.state);\n            });\n        }\n    }\n\n    //选择审批的类型\n    handleChange = (value) => {\n        this.setState({\n            approvetype: value,\n            comment: approvetypeToText(value) ,\n            userName:\"\",\n            userIds: [],\n            userId: [],\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //绑定审批意见\n    handlerCommentChange = (e) => {\n        this.setState({ comment: e.target.value },()=>{\n            this.props.onChangestate(this.state);\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //审批提交\n\n    //通用关闭方法\n    activityModalClose = () => {\n        this.setState({\n            rejectToActivityShow: false,\n            rejectlist: [],\n            selectedRow: []\n        },()=>{\n            this.props.onChangestate(this.state);\n        });\n    }\n    //驳回到环节的最终提交\n    rejectToActivityOK = async () => {\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        onStart && onStart();\n        let rejectToBillMakerMsg = await sendBpmTaskAJAX('rejectToBillMaker', {\n            activityId: this.state.activityId,\n            approvetype: this.state.approvetype,\n            comment: this.state.comment,\n            processInstanceId: this.state.processInstanceId,\n            taskId: this.state.taskId\n        }).catch((e) => {\n            Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: `服务器请求错误`\n            });\n        });\n\n        if (rejectToBillMakerMsg.data.flag == 'success') {\n            onSuccess && onSuccess();\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'info', position: 'top' });\n            this.setState({\n                rejectToActivityShow: false,\n                rejectlist: [],\n                selectedRow: []\n            },()=>{\n                this.props.onChangestate(this.state);\n            });\n        } else {\n            Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'danger', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: rejectToBillMakerMsg.data.msg\n            });\n        }\n    }\n    //流程图函数调用\n    handlerFlow = () => {\n        let onBpmFlowClick = this.props.onBpmFlowClick;\n        onBpmFlowClick && onBpmFlowClick();\n    }\n    getDataSource=()=>{\n        let arr =[{\n            key: \"同意\",\n            value: \"agree\"\n        }];\n        let { addsignAble,rejectAble ,delegateAble,unagreeable } = this.props.properties\n        if(unagreeable)arr.push({key: \"不同意\", value: \"unagree\"})\n        if(rejectAble)arr.push({key: \"驳回到环节\", value: \"rejectToActivity\"})\n        if(addsignAble)arr.push({key: \"加签\", value: \"signAdd\"})\n        if(delegateAble)arr.push({key: \"改派\", value: \"delegate\"})\n        return arr\n    }\n    rejectToActivity= async ()=>{\n        let { onError } = this.props;\n        let result = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n        if (result.data.flag == 'success'&& result.data.rejectlist.length>0) {\n            this.setState({\n                rejectlist: result.data.rejectlist,\n                selectedRow: new Array(result.data.rejectlist.length),\n                rejectToActivityShow: true\n            });\n        } else {\n            Message.create({ content: result.data.msg||'当前环节为首环节，没有可以驳回的环节', color: 'warning', position: 'top' });\n            onError && onError({\n                type: 2,\n                msg: result.data.msg||'当前环节为首环节，没有可以驳回的环节'\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let userRef ={\n            title:self.state.approvetype ==='delegate'?'改派人员选择':\"加签人员选择\",\n            backdrop: false,\n            hasPage: true,\n            refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n            isRadio: self.state.approvetype === 'delegate',\n            filterRefUrl: '/iuap_pap_quickstart/common/filterRef',\n            className: '',\n            param: {//url请求参数\n                refCode: 'newuser',\n                tenantId: '',\n                sysId: '',\n                transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n            },\n            //选择中的数据\n            keyList: self.state.userIds,\n            //保存回调sels选中的行数据showVal显示的字\n            onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                var temp = sels.map(v => v.id);\n                //显示值\n                let userName = self.state.userName;\n                userName = showVal;\n                //选中的值\n                let userId = self.state.userIds;\n                userId = temp;\n                self.setState({\n                    userId: userId[0],\n                    userIds:userId,\n                    userName: userName,\n\n                },()=>{\n                    self.props.onChangestate(self.state);\n                });\n            },\n            showVal: this.state.userName,\n            showKey: 'refname',\n            verification: false\n        }\n        return (\n            <div className=\"clearfix\">\n                <div style={{ \"padding\": \"0px\" }}>\n                    {this.props.appType == \"1\" && <div>\n                        <Row style={{\n                            \"margin\":\"8px 0\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={1} xs={1} sm={1} style={{\"paddingLeft\":0,\"paddingRight\":'15px'}}>\n                                <Select\n                                    style={{ width: '100%' }}\n                                    placeholder=\"请选择\"\n                                    onChange={self.handleChange}\n                                    defaultValue=\"agree\"\n                                    data={self.getDataSource()}\n                                />\n                            </Col>\n                                <Col md={3} xs={3} sm={3} style={{\"paddingLeft\":0}}>\n                                    {this.state.approvetype===\"signAdd\" &&<RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />}{/*加签*/}\n                                    {this.state.approvetype===\"delegate\" &&<RefWithInput  disabled={false} option={Object.assign(JSON.parse(refOptions), userRef)} />}{/*改派*/}\n                                    {this.state.approvetype===\"rejectToActivity\" &&<FormControl\n                                        readOnly={true}\n                                        placeholder={'请选择环节'}\n                                        value={this.state.activityName}\n                                        onClick={this.rejectToActivity}\n                                        onChange={this.onChange} />}{/*驳回*/}\n                                </Col>\n                            <Col md={4} mdOffset={4} xs={4} xsOffset={4} sm={4} smOffset={4} style={{ \"textAlign\": \"right\",\"paddingRight\": 0}}>\n                                {/*{this.props.appType == \"1\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}*/}\n                                {this.props.appType == \"1\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入处理意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                    {this.props.appType == \"2\" && <div>\n                        <Row style={{\n                            \"height\": \"46px\",\n                            \"lineHeight\": \"46px\",\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={8}>\n                                <Radio.RadioGroup\n                                    name=\"approvetype\"\n                                    selectedValue={this.state.approvetype}\n                                    onChange={this.handleChange}>\n                                    <Radio value=\"withdraw\">弃审</Radio>\n                                </Radio.RadioGroup>\n                            </Col>\n                            <Col md={4} style={{ \"textAlign\": \"right\" }}>\n                                {/*{this.props.appType == \"2\" && <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"10px\" }} colors=\"primary\">提交</Button>}*/}\n                                {this.props.appType == \"2\" && <Button onClick={this.handlerFlow} colors=\"primary\">流程图</Button>}\n                            </Col>\n                        </Row>\n                        <Row style={{\n                            \"padding\": \"0 10px\"\n                        }}>\n                            <Col md={12}>\n                                <textarea\n                                    style={{\n                                        \"height\": \"75px\",\n                                        \"width\": \"100%\",\n                                        \"outline\": \"none\",\n                                        \"resize\": \"none\",\n                                        \"border\": \"1px solid #cecece\",\n                                        \"padding\": \"10px\",\n                                        \"marginBottom\": \"20px\",\n                                        \"borderRadius\": \"4px\"\n                                    }}\n                                    placeholder=\"请输入弃审意见\"\n                                    value={this.state.comment}\n                                    onChange={this.handlerCommentChange}\n                                />\n                            </Col>\n                        </Row>\n                    </div>}\n                </div>\n                <Modal\n                    show={this.state.rejectToActivityShow}\n                    backdrop={false}\n                    onHide={this.activityModalClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title> 活动列表 </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Table\n                            rowKey={(r) => r.activityId}\n                            emptyText={() => (<div>暂无数据</div>)}\n                            rowClassName={(record, index, indent) => {\n                                if (this.state.selectedRow[index]) {\n                                    return 'selected';\n                                } else {\n                                    return '';\n                                }\n                            }}\n                            onRowClick={(record, index, indent) => {\n                                let selectedRow = new Array(this.state.rejectlist.length);\n                                selectedRow[index] = true;\n                                this.setState({\n                                    activityId: record.activityId,\n                                    activityName:record.activityName,\n                                    selectedRow: selectedRow\n                                },()=>{\n                                    this.props.onChangestate(this.state);\n                                });\n                            }}\n                            columns={this.rejectToActivityCol} data={this.state.rejectlist} />\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button colors=\"danger\" style={{ \"marginRight\": \"10px\" }} onClick={this.activityModalClose}> 确定 </Button>\n                        <Button onClick={this.activityModalClose}> 关闭 </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\nBpmTaskApproval.propTypes = propTypes;\nBpmTaskApproval.defaultProps = {\n    appType: \"1\",\n    refCode: \"newuser\",\n    properties:{\n        addSignAble:true, //可否加签\n        iscopytouser:true, //可否抄送\n        rejectAble:true, //可否驳回\n        delegateAble:true, //可否改派\n        unagreeable:true, //可否不同意\n        assignAble:true, //可否指派\n    }\n}\n\nexport default BpmTaskApproval;\n","/**\n * 审批抄送组件\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {  Panel,Col, Row, Button ,Label,Checkbox} from 'tinper-bee';\nimport classnames from 'classnames'\nimport BpmCopyContent from \"./BpmCopyContent\";\nconst propTypes = {\n    panelOpen:PropTypes.bool,//是否默认展开，false默认关闭\n    reset:PropTypes.func,//重置的回调\n    title: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    organrefCode: PropTypes.string,\n    positonrefCode: PropTypes.string,\n    refCode: PropTypes.string,\n    onCopyusersChange:PropTypes.func,\n    onintersectionChange:PropTypes.func\n};\nclass BpmTaskCopyPanel extends Component {\n    constructor() {\n        super();\n        this.state = {\n            panelOpen:true,\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true\n        };\n    }\n    open=()=>{\n        this.setState({\n            panelOpen: !this.state.panelOpen\n        })\n    }\n    changeCheck=()=> {\n        this.setState({intersection:!this.state.intersection});\n    }\n    render() {\n        let self = this;\n        let classes = 'copy-panel';\n        let header = () => {\n            return (\n                <div className=\"clearfix\" onClick={this.open}>\n                    <span  className={'copy-panel-title'} style={{\"float\":\"left\",\"color\": \"#434A54\",\"fontSize\": \"14px\"}}>\n                        {this.props.title}\n                    </span>\n                    <span  className={'copy-panel-icon'} style={{\"float\":\"right\", \"color\": \"#1E7BE2\",\"fontSize\": \"14px\"}}>\n                        {this.state.panelOpen ? '展开':'收起'}\n                        <i className={classnames({\n                            'uf': true,\n                            'uf-arrow-down': !this.state.panelOpen,\n                            'uf-arrow-right': this.state.panelOpen\n                        })}/>\n                    </span>\n                </div>\n            )\n        };\n        return (\n            <Panel className={classes} style={{\"borderRadius\": \"0!important\",\"border\": \"none!important\",\"borderBottom\": \"1px solid transparent!important\"}}  header={header()}  collapsible expanded={this.state.searchOpen}>\n                <div className=\"clearfix\">\n                    <BpmCopyContent onCopyusersChange={self.props.onCopyusersChange}\n                        {...self.props}\n                        onintersectionChange={self.props.onintersectionChange}\n                    />\n                </div>\n\n        </Panel>\n        );\n    }\n}\nBpmTaskCopyPanel.propTypes = propTypes;\nBpmTaskCopyPanel.defaultProps = {\n    panelOpen:false,//是否默认展开，false默认关闭\n    selectResult:() => {},// : PropTypes.func,//查询的回调\n    reset: () => {},//重置的回调\n    title: \"抄送(选填)\",\n    filterRefUrl:'/iuap_pap_quickstart/common/filterRef',\n    refCode: \"newuser\",\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"newrole\",\n    userRef:\"newuser\"\n}\nexport default BpmTaskCopyPanel;\n","import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport Demo from './demo';\n\nReactDOM.render(<Demo />, document.querySelector(\"#app\"));","import React, { Component } from 'react';\nimport { Button } from 'tinper-bee';\nimport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign\n} from './index';\n\nimport 'tinper-bee/assets/tinper-bee.css';\n// import './index.less';\n\nclass Demo extends Component {\n    constructor() {\n        super();\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <BpmTaskApprovalWrap\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                    appType=\"1\"\n                    id=\"3be26f2debb442d9b5f8012ba40c3fa3\"\n                />\n                <BpmLinkAssign />\n                <BpmFlowChart\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTable\n                    processDefinitionId={\"eiap350694:3:e2e70948-9559-11e8-b376-02420cbf1b08\"}\n                    processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                />\n                <BpmTestCheckTable />\n                <BpmButtonSubmit\n                    funccode=\"ygdemo_yw_info\"\n                    nodekey=\"003\"\n                    size=\"lg\"\n                    isOne={false}\n                    url={`/ygdemo_yw_info/submit`}\n                    urlAssignSubmit={`/ygdemo_yw_info/assignSubmit`}\n                    checkedArray={\n                        [\n                            { \"id\": \"ea69b9bf-d8b5-47a7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 },\n                            { \"id\": \"ea69b9bf-d8sssa7-a1fd-1114f36a9321\", \"code\": \"180719001\", \"name\": \"岳明-01\", \"ly_code\": \"1\", \"ly_sm\": \"岳明-01\\u0000\", \"zr_dw\": \"97da3229-3308-4492-a457-cb4d4e6264a4\", \"zr_dw_name\": \"用友股份\", \"zrr\": null, \"xb_dw\": null, \"xb_dw_name\": null, \"xbr\": null, \"begin_date\": null, \"end_date\": null, \"zy_cd\": 2, \"qt_ld\": null, \"zbr\": null, \"zbr_name\": null, \"dbr\": null, \"jfyq\": null, \"db_info\": null, \"jd_bl\": null, \"rwpf\": null, \"kpi_flag\": 0, \"kpi_level\": 1, \"state\": 0, \"create_name\": null, \"create_name_name\": null, \"create_time\": null, \"update_name\": null, \"update_name_name\": null, \"update_time\": null, \"unitid\": null, \"unitid_name\": null, \"id_ygdemo_yw_sub\": null, \"metaDefinedName\": \"ygdemo_yw_info\", \"namespace\": \"iuap_qy\", \"status\": 0, \"changedPropertyNames\": null, \"tenant_id\": \"tenant\", \"dr\": 0, \"ts\": 1531970736000 }\n                        ]\n                    }\n                    onSuccess={() => console.log('success')}\n                    onError={(err) => console.log(err)}\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-up'></i>提交\n                    </Button>\n                </BpmButtonSubmit>\n                <BpmButtonRecall\n                    url={`/iuap_pap_quickstart/example_workorder/recall`}\n                    checkedArray={\n                        [\n                            {\n                                \"id\": \"ccb34c6d3fc349789be73678d7cc8fac\",\n                                \"createTime\": \"2018-07-04 12:36:26 088\",\n                                \"createUser\": \"U001\",\n                                \"lastModified\": \"2018-07-04 12:36:26 088\",\n                                \"lastModifyUser\": \"U001\",\n                                \"ts\": \"2018-07-04 12:36:26 088\",\n                                \"dr\": 0,\n                                \"bpmState\": 1,\n                                \"taskKey\": null,\n                                \"taskId\": null,\n                                \"processInstanceId\": null,\n                                \"processDefineCode\": null,\n                                \"comment\": null,\n                                \"orderCode\": \"201807042036265\",\n                                \"orderName\": null,\n                                \"supplier\": null,\n                                \"supplierName\": \"11\",\n                                \"type\": \"0\",\n                                \"purchasing\": \"22\",\n                                \"purchasingGroup\": \"22\",\n                                \"voucherDate\": 1530633600000,\n                                \"approvalState\": null,\n                                \"confirmState\": null,\n                                \"closeState\": null,\n                                \"type_name\": \"投诉工单\",\n                                \"approvalState_name\": null,\n                                \"confirmState_name\": null,\n                                \"closeState_name\": null,\n                                \"remark\": null,\n                                \"bpmBillCode\": null\n                            }\n                        ]\n                    }\n                >\n                    <Button size='sm' shape=\"border\" className=\"admin\">\n                        <i className='uf uf-arrow-c-o-down'></i>收回\n                    </Button>\n                </BpmButtonRecall>\n            </div>\n        );\n    }\n}\n\nexport default Demo;\n","import BpmTable from './BpmTable';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport BpmTestCheckTable from './BpmTestCheckTable';\nimport BpmWrap from './BpmWrap';\nimport BpmTaskApprovalWrap from './BpmTaskApprovalWrap';\nimport BpmButtonSubmit from './BpmButtonSubmit';\nimport BpmButtonRecall from './BpmButtonRecall';\nimport BpmLinkAssign from './BpmLinkAssign';\nimport BpmCopyContent from './BpmCopyContent';\nimport BpmTaskCopyPanel from './BpmTaskCopyPanel';\n\n\nexport {\n    BpmTable,\n    BpmFlowChart,\n    BpmTaskApproval,\n    BpmTestCheckTable,\n    BpmWrap,\n    BpmTaskApprovalWrap,\n    BpmButtonSubmit,\n    BpmButtonRecall,\n    BpmLinkAssign,\n    BpmCopyContent,\n    BpmTaskCopyPanel\n}","/**\n * 核心功能函数处理类\n */\n\nimport axios from 'axios';\nimport { Message } from 'tinper-bee';\n\n/**\n * 后端时间戳转换正常日期时间\n * @param {*} _stamp 时间戳\n * @param {*} formatStr 日期格式\n */\nexport const timestampToDate = (_stamp, formatStr = 'yyyy-MM-dd  hh:mm:ss') => {\n    let unixTimestamp = new Date(_stamp);\n    {\n        var str = formatStr;\n        var Week = ['日', '一', '二', '三', '四', '五', '六'];\n\n        str = str.replace(/yyyy|YYYY/, unixTimestamp.getFullYear());\n        str = str.replace(/yy|YY/, (unixTimestamp.getYear() % 100) > 9 ? (unixTimestamp.getYear() % 100).toString() : '0' + (unixTimestamp.getYear() % 100));\n        var month = unixTimestamp.getMonth() + 1;\n        str = str.replace(/MM/, month > 9 ? month.toString() : '0' + month);\n        str = str.replace(/M/g, month);\n\n        str = str.replace(/w|W/g, Week[unixTimestamp.getDay()]);\n\n        str = str.replace(/dd|DD/, unixTimestamp.getDate() > 9 ? unixTimestamp.getDate().toString() : '0' + unixTimestamp.getDate());\n        str = str.replace(/d|D/g, unixTimestamp.getDate());\n\n        str = str.replace(/hh|HH/, unixTimestamp.getHours() > 9 ? unixTimestamp.getHours().toString() : '0' + unixTimestamp.getHours());\n        str = str.replace(/h|H/g, unixTimestamp.getHours());\n        str = str.replace(/mm/, unixTimestamp.getMinutes() > 9 ? unixTimestamp.getMinutes().toString() : '0' + unixTimestamp.getMinutes());\n        str = str.replace(/m/g, unixTimestamp.getMinutes());\n\n        str = str.replace(/ss|SS/, unixTimestamp.getSeconds() > 9 ? unixTimestamp.getSeconds().toString() : '0' + unixTimestamp.getSeconds());\n        str = str.replace(/s|S/g, unixTimestamp.getSeconds());\n        return str;\n    }\n}\n\n/**\n * 流程历史表格描述转换\n */\nexport const descriptionToText = (vApproveType) => {\n    if (vApproveType == 'submit') {\n        return '提交';\n    }\n    if (vApproveType == 'agree') {\n        return '审批';\n    }\n    if (vApproveType == 'unagree') {\n        return '不同意';\n    }\n    if (vApproveType == 'reject') {\n        return '驳回';\n    }\n    if (vApproveType == 'signAdd') {\n        return '加签';\n    }\n    if (vApproveType == 'signAdding') {\n        return '加签中';\n    }\n    if (vApproveType == 'delegate') {\n        return '改派';\n    }\n    if (vApproveType == 'termination') {\n        return '终止';\n    }\n    if (vApproveType == 'withdraw') {\n        return '删除';\n    }\n    if (vApproveType == 'postCompleted') {\n        return '审批';\n    }\n}\n\n/**\n * 获得处理URL\n */\nexport const getBpmTaskURL = (type, root = \"/eiap-plus/\") => {\n    switch (type) {\n        case 'agree':\n            return root + 'task/completetask/approveCard';\n        case 'unagree':\n            return root + 'task/completetask/approveCard';\n        case 'rejectToActivity':\n            return root + 'task/rejecttask/bfreject';\n        case 'rejectToBillMaker':\n            return root + 'task/rejecttask/reject';\n        case 'signAdd':\n            return root + 'task/assignee/getlist';\n        case 'delegate':\n            return root + 'task/assignee/getlist';\n        case 'withdraw':\n            return root + 'task/withdrawtask/withdraw';\n        case 'hisTasklist':\n            return root + 'process/hisTasklist';\n        case 'commit':\n            return root + 'task/assigntask/commit';\n        case 'signaddtask':\n            return root + 'task/signaddtask/signadd';\n        case 'delegatetask':\n            return root + 'task/delegatetask/delegate';\n        default:\n            return \"/\"\n            break;\n    }\n}\n\n/**\n * 发送异步\n */\nexport const sendBpmTaskAJAX = (type, data) => {\n    switch (type) {\n        case 'agree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'unagree':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToActivity':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'rejectToBillMaker':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signAdd':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegate':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'withdraw':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'hisTasklist':\n            return axios.post(getBpmTaskURL(type), {\n                processDefinitionId: data.processDefinitionId,\n                processInstanceId: data.processInstanceId\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'commit':\n            return axios.post(getBpmTaskURL(type), {\n                activityId: data.activityId,\n                activityName: data.activityName,\n                comment: data.comment,\n                taskId: data.taskId,\n                approvetype: data.approvetype,\n                processInstanceId: data.processInstanceId,\n                participants: data.participants\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'signaddtask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userIds: data.userIds,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n        case 'delegatetask':\n            return axios.post(getBpmTaskURL(type), {\n                approvetype: data.approvetype,\n                comment: data.comment,\n                processInstanceId: data.processInstanceId,\n                taskId: data.taskId,\n                userId: data.userId,\n                copyusers:data.copyusers,\n                intersection:data.intersection\n            }).catch((e) => {\n                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n            })\n\n        default:\n            break;\n    }\n    return axios.post(getBpmTaskURL(type), data).catch((e) => {\n        Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n    })\n}\n\n/**\n * 通过billID获得流程图参数\n */\nexport const billidToIds = (billId) => {\n    return axios.post('/eiap-plus/process/getbillbpm', {\n        billId\n    });\n}\n/**\n * 查询数据\n */\nexport const queryBpmTemplateAllocate = (obj) => {\n    return axios.get(`/eiap-plus/appResAllocate/queryBpmTemplateAllocate?_=${Math.random()}`, {\n        params: {\n            funccode: obj.funccode,\n            nodekey: obj.nodekey\n        }\n    });\n}\n/**\n * 提交流程\n */\nexport const onCommit = (data) => {\n    return axios({\n        url: `${data.url}`,\n        method: \"post\",\n        data: data['submitArray'],\n        params: { \"processDefineCode\": data['processDefineCode'] }\n    });\n}\n/**\n * 收回流程\n */\nexport const onRecall = (url, data) => {\n    return axios({\n        url: `${url}`,\n        method: \"post\",\n        data: data\n    });\n}\n/**\n * 查询流程定义的id\n */\nexport const getByFindProcessDefinitionId = (processDefinitionKey) => {\n    return axios.get(`eiap-plus/process/latestProDefByKey?processDefinitionKey=${processDefinitionKey}&_=${Math.random()}`, {\n        params: {}\n    });\n}\n\n/**\n * 审批状态类型返回默认审批文案\n */\nexport const approvetypeToText = (type) => {\n    switch (type) {\n        case 'agree':\n            return '审批同意';\n        case 'unagree':\n            return '审批不同意';\n        case 'rejectToActivity':\n            return '驳回到环节';\n        case 'rejectToBillMaker':\n            return '驳回到制单人';\n        case 'signAdd':\n            return '加签';\n        case 'delegate':\n            return '改派';\n        case 'withdraw':\n            return '弃审';\n        default:\n            break;\n    }\n}\n\n/**\n * Unicode编码转换\n */\nexport const reconvert = (str) => {\n    str = str.replace(/(\\\\u)(\\w{1,4})/gi, function ($0) {\n        return (String.fromCharCode(parseInt((escape($0).replace(/(%5Cu)(\\w{1,4})/g, \"$2\")), 16)));\n    });\n    str = str.replace(/(&#x)(\\w{1,4});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23x)(\\w{1,4})(%3B)/g, \"$2\"), 16));\n    });\n    str = str.replace(/(&#)(\\d{1,6});/gi, function ($0) {\n        return String.fromCharCode(parseInt(escape($0).replace(/(%26%23)(\\d{1,6})(%3B)/g, \"$2\")));\n    });\n\n    return str;\n}","let option = {\n    title: '',\n    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n    className: '',\n    param: {//url请求参数\n        refCode: 'bd_common_user',\n        tenantId: '',\n        sysId: '',\n        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n    },\n    refModelUrl: {\n        TreeUrl: '/newref/rest/iref_ctr/blobRefTree', //树请求\n        TableBodyUrl: '/newref/rest/iref_ctr/blobRefTreeGrid',//表体请求//ref/rest/iref_ctr/blobRefTreeGrid\n        TableBarUrl: '/newref/rest/iref_ctr/refInfo',//表头请求ref/rest/iref_ctr/refInfo\n    },\n    filterRefUrl: '/iuap_pap_quickstart/common/filterRef',//get\n    // keyList:['123'],//选中的key\n\n    // checkedArray: [],\n    onCancel: function (p) {\n        console.log(p)\n    },\n    filterKey: [{ title: '人员名称人员名称人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }, { title: '人员名称', key: 'peoname' }],\n    textOption: {\n        modalTitle: '选择品类',\n        leftTitle: '品类结构',\n        rightTitle: '品类列表',\n        leftTransferText: '待选品类',\n        rightTransferText: '已选品类',\n        leftInfo: [{ text: '流水号', key: 'peoname' }, { text: '品类编码', key: 'institid' }, { text: '品类描述', key: 'refname' }],\n        rightInfo: [{ text: '流水号', key: 'id' }, { text: '品类编码', key: 'id' }, { text: '品类描述', key: 'peocode' }],\n    }\n}\n\n\nexport default JSON.stringify(option)\n","/**\n * 模拟任务中心测试组件\n */\n\nimport React, { Component } from 'react';\nimport { Table, Row, Col, Button } from 'tinper-bee';\nimport axios from 'axios';\n\nclass BpmTestCheckTable extends Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            factoryValue: {}\n        };\n        this.columns = [\n            {\n                title: \"Name\",\n                dataIndex: \"name\",\n                key: \"name\",\n                width: \"30%\"\n            },\n            {\n                title: \"ID\",\n                dataIndex: \"id\",\n                key: \"id\"\n            },\n            {\n                title: \"processDefinitionId\",\n                dataIndex: \"processDefinitionId\",\n                key: \"processDefinitionId\"\n            },\n            {\n                title: \"processInstanceId\",\n                dataIndex: \"processInstanceId\",\n                key: \"processInstanceId\"\n            }\n        ];\n    }\n    componentDidMount = async () => {\n        let hisTasklist = `eiap-plus/process/undoTasklist`;\n        let hisTasklistData = await axios.post(hisTasklist, { \"draw\": 1, \"length\": 10, \"order\": {}, \"search\": { \"search_EQ_code\": \"\", \"undefined\": \"\", \"processDefinitionName\": \"\", \"billno\": \"\" }, \"searchconfirm\": {} });\n        if (Array.isArray(hisTasklistData.data.data)) {\n            this.setState({\n                data: hisTasklistData.data.data\n            });\n        }\n\n    }\n    render() {\n        return (<Table\n            bordered\n            emptyText={() => <span>暂时没有数据</span>}\n            columns={this.columns}\n            data={this.state.data}\n            title={() => <Button colors=\"primary\" onClick={() => {\n                //document.location.hash = `#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                document.location.hash = `#/bdm/bpmapproval?id=${this.state.factoryValue.id}&processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`;\n                //window.open(`http://127.0.0.1:3000/#/bdm/bpm?processDefinitionId=${this.state.factoryValue.processDefinitionId}&processInstanceId=${this.state.factoryValue.processInstanceId}`);\n            }}>任务中心打开审批</Button>}\n            onRowClick={(record, index, indent) => {\n                this.setState({\n                    factoryValue: record\n                });\n            }}\n        />);\n    }\n}\n\nexport default BpmTestCheckTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row } from 'tinper-bee';\nimport BpmFlowChart from './BpmFlowChart';\nimport BpmTable from './BpmTable';\nimport { billidToIds } from './common';\n\n\nconst propTypes = {\n    id: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n\n}\nclass BpmWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            processDefinitionId: \"\",\n            processInstanceId: \"\"\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            let { processDefinitionId, processInstanceId } = pID.data;\n            this.setState({\n                processDefinitionId,\n                processInstanceId\n            });\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId\n            });\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmFlowChart\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        {this.state.processDefinitionId && <BpmTable\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                        />}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\nBpmWrap.propTypes = propTypes;\nBpmWrap.defaultProps = {\n    id: \"\"\n}\nexport default BpmWrap;\n","/**\n * 审批逻辑组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row, Button ,Message} from 'tinper-bee';\nimport BpmTaskApproval from './BpmTaskApproval';\nimport { billidToIds } from './common';\nimport refOptions from './refOptions';\nimport createModal from 'yyuap-ref';\nimport { sendBpmTaskAJAX } from './common';\nimport BpmTaskCopyPanel from  './BpmTaskCopyPanel';\n\nconst propTypes = {\n    id: PropTypes.string,\n    refCode: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    onBpmFlowClick: PropTypes.func,\n    appType: PropTypes.string,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func\n}\nclass BpmTaskApprovalWrap extends Component {\n    constructor() {\n        super();\n        this.state = {\n            isShowFlowBtn: false,\n            id: \"\",\n            taskId: \"\",\n            processDefinitionId: \"\",\n            processInstanceId: \"\",\n            copyusers:[], //抄送数据\n            intersection:true, //是否交集\n            approvetype:\"agree\",  //审批类型\n            comment:\"审批同意\", //审批内容\n            activityId:\"\",//驳回环节id\n            userIds:[],//加签用户数组\n            userId:\"\",//改派用户\n            properties:{\n                addSignAble:true, //可否加签\n                iscopytouser:true, //可否抄送\n                rejectAble:true, //可否驳回\n                delegateAble:true, //可否改派\n                unagreeable:true, //可否不同意\n                assignAble:true, //可否指派\n            }\n        }\n    }\n\n    componentWillMount = async () => {\n        if (!this.props.processDefinitionId) {//督办查看详情\n            let pID = await billidToIds(this.props.id);\n            if (pID.data.message && pID.data.message == 'NoBpm') {\n                // console.log('NoBpm');\n                this.setState({\n                    isShowFlowBtn: false\n                });\n            } else if (pID.data.taskId) {\n                let { processDefinitionId, processInstanceId, taskId } = pID.data;\n                //可否加签|可否抄送|可否驳回|可否改派|可否不同意|可否指派\n                let {currentActivity:{ properties:{ addsignAble,iscopytouser,rejectAble ,delegateAble,unagreeable,assignAble }}}= pID.data;\n\n                this.setState({\n                    id: taskId,\n                    taskId:taskId,\n                    properties:{\n                        addsignAble,iscopytouser,rejectAble,delegateAble,unagreeable,assignAble\n                    },\n                    processDefinitionId,\n                    processInstanceId,\n                });\n            } else {\n                this.setState({\n                    isShowFlowBtn: true\n                });\n            }\n        } else {//从任务中心跳转\n            this.setState({\n                processDefinitionId: this.props.processDefinitionId,\n                processInstanceId: this.props.processInstanceId,\n                id: this.props.id\n            });\n        }\n    }\n    //提交\n    handlerSubmitBtn =  async()=>{\n        let { onStart, onEnd, onSuccess, onError } = this.props;\n        if (this.state.comment == \"\") {\n            Message.create({ content: '审批意见不能为空', color: 'danger', position: 'top' });\n            return;\n        }\n        onStart && onStart();\n        //检测需要二次请求并弹出Modal审批\n        switch (this.state.approvetype) {\n            case 'agree'://同意\n            case 'unagree'://不同意\n                let result = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n                //普通同意操作，没有后续操作，直接成功\n                if (result.data.flag == 'success') {\n                    Message.create({ content: result.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else if (result.data.flag == 'faile') {\n                    Message.create({ content: result.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: result.data.msg\n                    });\n                }\n                //普通同意操作，有后续操作，有加签人员判断\n                if (result.data.assignAble) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.assignList.length > 0) {\n                        this.setState({\n                            HuoDongID: result.data.assignList[0].activityId,\n                            HuoDongName: result.data.assignList[0].activityName\n                        });\n                    }\n                    // onStart && onStart();\n                    //可以是加签操作，拉取加签请求\n                    onEnd && onEnd();\n                    //TODO 穿梭框参照 配置参照需要参数\n                    var options = Object.assign(JSON.parse(refOptions), {\n                        title: '指派人员选择',\n                        backdrop: false,\n                        hasPage: true,\n                        refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                        isRadio: false,\n                        className: '',\n                        param: {//url请求参数\n                            refCode: this.props.refCode,\n                            tenantId: '',\n                            sysId: '',\n                            transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                        },\n                        //选择中的数据\n                        keyList: [],\n                        //保存回调sels选中的行数据showVal显示的字\n                        onSave: async (sels, showVal) => {//showVal=\"12;13;管理员\"\n                            //回调\n                            onStart && onStart();\n                            //同意后续的加签\n                            //TO DO:重构URL\n                            var agreeeMsg = await sendBpmTaskAJAX('commit', {\n                                activityId: this.state.HuoDongID,\n                                activityName: this.state.HuoDongName,\n                                comment: this.state.comment,\n                                taskId: this.state.taskId,\n                                approvetype: this.state.approvetype,\n                                processInstanceId: this.state.processInstanceId,\n                                participants: Array.from(sels, x => ({ id: x.id }))\n                            }).catch((e) => {\n                                Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: `服务器请求出错`\n                                });\n                            });\n                            //确认加签后的处理\n                            if (agreeeMsg.data.flag == 'success') {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'info', position: 'top' });\n                                this.setState({\n                                    rejectlist: [],\n                                    selectedRow: []\n                                });\n                                onSuccess && onSuccess();\n                            } else {\n                                Message.create({ content: `${agreeeMsg.data.msg}`, color: 'danger', position: 'top' });\n                                onError && onError({\n                                    type: 2,\n                                    msg: agreeeMsg.data.msg\n                                });\n                            }\n                        },\n                        showVal: '',\n                        showKey: 'refname',\n                        verification: false\n                    });\n                    //弹出参照组件\n                    createModal(options);\n                }\n                break;\n            //驳回到环节\n            case 'rejectToActivity':\n                let {activityId,approvetype,comment,processInstanceId,taskId}=this.state;\n                if(!activityId ||activityId.length ===0){\n                    Message.create({ content: `驳回环节不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `驳回环节不可为空`\n                    });\n                    return\n                }\n                let rejectToBillMakerMsg = await sendBpmTaskAJAX('rejectToBillMaker', {\n                    activityId: activityId,\n                    approvetype: approvetype,\n                    comment: comment,\n                    processInstanceId: processInstanceId,\n                    taskId: taskId,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求错误`\n                    });\n                });\n\n                if (rejectToBillMakerMsg.data.flag == 'success') {\n                    onSuccess && onSuccess();\n                    Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'info', position: 'top' });\n                    this.setState({\n                        rejectToActivityShow: false,\n                        rejectlist: [],\n                        selectedRow: []\n                    });\n                } else {\n                    Message.create({ content: `${rejectToBillMakerMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: rejectToBillMakerMsg.data.msg\n                    });\n                }\n                break;\n            //加签\n            case 'signAdd':\n                onStart && onStart();\n                //TO DO:重构URL\n                if(!this.state.userIds ||this.state.userIds.length ===0){\n                    Message.create({ content: `加签人员不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `加签人员不可为空`\n                    });\n                    return\n                }\n                //执行最终加签操作\n                let signAddMsg = await sendBpmTaskAJAX('signaddtask', {\n                    approvetype: this.state.approvetype,\n                    comment: this.state.comment,\n                    processInstanceId: this.state.processInstanceId,\n                    taskId: this.state.taskId,\n                    userIds: this.state.userIds,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求出错`\n                    });\n                });\n                //判断加签最终是否成功\n                if (signAddMsg.data.flag == 'success') {\n                    Message.create({ content: `${signAddMsg.data.msg}`, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: `${signAddMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: signAddMsg.data.msg\n                    });\n                }\n                break;\n            //改派\n            case 'delegate':\n                onStart && onStart();\n                if(!this.state.userId ||this.state.userId.length ===0){\n                    Message.create({ content: `改派人员不可为空`, color: 'warning', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `改派人员不可为空`\n                    });\n                    return\n                }\n                //TO DO:重构URL\n                let delegateMsg = await sendBpmTaskAJAX('delegatetask', {\n                    approvetype: this.state.approvetype,\n                    comment: this.state.comment,\n                    processInstanceId: this.state.processInstanceId,\n                    taskId: this.state.taskId,\n                    userId: this.state.userId,\n                    copyusers:this.state.copyusers,\n                    intersection:this.state.intersection\n                }).catch((e) => {\n                    Message.create({ content: `${e.toString()}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: `服务器请求出错`\n                    });\n                });\n                //处理后续的操作\n                if (delegateMsg.data.flag === 'success') {\n                    Message.create({ content: `${delegateMsg.data.msg}`, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: `${delegateMsg.data.msg}`, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: delegateMsg.data.msg\n                    });\n                }\n                break;\n            case 'withdraw':\n                let res = await sendBpmTaskAJAX(this.state.approvetype, this.state);\n                if (res.data.flag === 'success') {\n                    Message.create({ content: res.data.msg, color: 'info', position: 'top' });\n                    onSuccess && onSuccess();\n                } else {\n                    Message.create({ content: res.data.msg, color: 'danger', position: 'top' });\n                    onError && onError({\n                        type: 2,\n                        msg: res.data.msg\n                    });\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    onChangestate =(s)=>{  //审批面板选择的数据\n           //审批类型       审批消息  任务ID  驳回活动id   加签数据  改派\n        let { approvetype, comment,taskId, activityId, userIds, userId} =s;\n        this.setState({\n            approvetype, comment,taskId, activityId, userIds, userId\n        });\n    }\n    render() {\n        return (\n            <div className=\"clearfix\">\n                {this.state.processDefinitionId && <div>\n                    <Row>\n                        <div>\n\n                        </div>\n                    </Row>\n                    <Row>\n                    <Col md={12}>\n                        <BpmTaskApproval\n                            id={this.state.id}\n                            refCode={this.props.refCode}\n                            onBpmFlowClick={this.props.onBpmFlowClick}\n                            processDefinitionId={this.state.processDefinitionId}\n                            processInstanceId={this.state.processInstanceId}\n                            appType={this.props.appType}\n                            properties={this.state.properties}\n                            onStart={this.props.onStart}\n                            onEnd={this.props.onEnd}\n                            onSuccess={this.props.onSuccess}\n                            onError={this.props.onError}\n                            onChangestate = {this.onChangestate}\n                        />\n                    </Col>\n                </Row>\n                    {this.state.properties.iscopytouser && this.props.appType == 1 && <Row>\n                    <Col md={12}>\n                        <BpmTaskCopyPanel\n                            panelOpen={false}\n                            title={'抄送(选填)'}\n                            onCopyusersChange={(s)=>{\n                                this.setState({copyusers:s});\n\n                            }}\n                            onintersectionChange={(s)=>{\n                                this.setState({intersection:s});\n                            }}\n\n                        />\n                    </Col>\n                </Row>}\n                    <Row>\n                        <Col  style={{ \"textAlign\": \"right\" }}>\n                            <Button onClick={this.handlerSubmitBtn} style={{ \"marginRight\": \"26px\" }} colors=\"primary\">提交</Button>\n                        </Col>\n                    </Row>\n\n                </div>}\n                {this.state.isShowFlowBtn && <Row>\n                    <Col mdOffset={11} md={1} style={{ \"textAlign\": \"right\" }}>\n                        <Button onClick={this.props.onBpmFlowClick} style={{ \"marginBottom\": \"4px\", \"marginRight\": \"15px\" }} colors=\"primary\">流程图</Button>\n                    </Col>\n                </Row>}\n            </div>\n        );\n    }\n}\nBpmTaskApprovalWrap.propTypes = propTypes;\nBpmTaskApprovalWrap.defaultProps = {\n    id: \"\",\n    appType: \"1\",\n    refCode: \"newuser\"\n}\nexport default BpmTaskApprovalWrap;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table ,Row,Label,Checkbox } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert ,getByFindProcessDefinitionId} from './common';\nimport refOptions from './refOptions';\nimport BpmCopyContent from \"./BpmCopyContent\";\nimport BpmFlowChart from './BpmFlowChart';\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    size: PropTypes.string,\n    scrollY: PropTypes.number,\n    isOne: PropTypes.bool,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonSubmit extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: [],//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [],\n            chaosongShow:false,//抄送显示\n            editRowIndex: 0,\n            showVal: [],\n            copyusers:[],   //抄送数据\n            copyuserShowVal:[], //抄送显示\n            intersection:true, //是否交集\n            processDefinitionId:\"\",\n            submitStatus:true\n        }\n    }\n    getByProcessDefinitionId= async (processDefineCode) =>{\n        let {data:{data,flag}} = await getByFindProcessDefinitionId(processDefineCode);\n        if(data && flag === \"success\"){\n            this.setState({\n                processDefinitionId:data.id\n            })\n        }else{\n            console.log(\"根据流程定义key查询processDefinitionId\");\n\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, isOne, onStart, onEnd, onSuccess, onError } = this.props;\n        this.setState({\n            submitStatus:true\n        })\n        //检查是否多单据提交\n        if (isOne && checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                if(!detailMsg.data.res_code){\n                    console.log(\"单据没有关联流程!\");\n                    return;\n                }\n                this.getByProcessDefinitionId(detailMsg.data.res_code);\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        let arr = result.data.detailMsg.data.assignedActivities.filter( (item)=>{ return !item.properties.startactivity;});\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            chaosongShow:result.data.detailMsg.data.assignedActivities[0].properties.iscopytouser,\n                            huanjieList: arr,\n                            obj: checkedArray,\n                            assignInfo: {\n                                assignInfoItems: Array.from(arr, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            chaosongShow:false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj,copyusers,intersection } = this.state;\n        // obj=obj[0];\n        let arr=[];\n        copyusers.map(function(value) {\n            arr=arr.concat(value);\n        });\n        copyusers=arr;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj,\n            copyusers,\n            intersection\n\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                chaosongShow:false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                chaosongShow:false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    changeCheck=()=> {\n        this.setState({intersection:!this.state.intersection});\n    }\n    \n    /**\n     * 环节指派的时候，指派人必须选择，不然无法提交。\n     * @memberof BpmButtonSubmit\n     */\n    participantsValidate(sourseArray){\n        let count = 0;\n        sourseArray.forEach(da=>{\n            if(da.participants && da.participants.length>=1){\n                count++;\n            }\n        })\n        return count == sourseArray.length?false:true;\n    }\n\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '指派人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            },\n                            submitStatus:self.participantsValidate(sourseArray)\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n\n        return (<span>\n            <span onClick={this.handlerBtn}>\n                {\n                    this.props.children\n                }\n            </span>\n            <Modal\n                size={this.props.size}\n                show={this.state.huanjieShow||this.state.chaosongShow}\n                backdrop={false}\n                enforceFocus={false}\n                onHide={this.closeHuanjie}>\n                <Modal.Header closeButton>\n                    <Modal.Title> {this.state.huanjieShow?'环节指派':'抄送'}</Modal.Title>\n                </Modal.Header>\n                {this.state.huanjieShow?<Modal.Body>\n                    <Table\n                        rowKey={record => record.id}\n                        columns={huanjieCol}\n                        data={this.state.huanjieList}\n                        scroll={{ x: \"100%\", y: 200 }}\n                    />\n                    <BpmFlowChart\n                        processDefinitionId={this.state.processDefinitionId}\n                        // processInstanceId={\"1352ad87-955e-11e8-b376-02420cbf1b08\"}\n                    />\n\n                </Modal.Body>:\"\"}\n                {this.state.chaosongShow?\n                <Modal.Header>\n                    <Modal.Title> 抄送 </Modal.Title>\n                </Modal.Header>:\"\"}\n                {this.state.chaosongShow?\n                    <Modal.Body>\n                        <BpmCopyContent\n                            onCopyusersChange={(s)=>{\n                                self.setState({copyusers:s})\n                            }}\n                            {...self.props}\n                            onintersectionChange={(s)=>{\n                                self.setState({intersection:s});\n                            }}\n                        />\n                    </Modal.Body>:\"\"}\n                <Modal.Footer style={{\"position\":\"relative\"}}>\n                    <span style={{ \"color\": \"red\" ,\"position\":\"absolute\",\"left\":\"10px\",\"top\":\"32%\"}}>{this.state.submitStatus?\"* 请把所有的环节都设置一个指派人\":\"\"}</span>\n                    <Button style={{ \"marginRight\": \"10px\" }}  onClick={this.closeHuanjie}> 关闭 </Button>\n                    <Button colors=\"primary\" disabled={this.state.submitStatus} onClick={this.huanjieHandlerOK}> 确定 </Button>\n                </Modal.Footer>\n            </Modal>\n        </span>);\n    }\n}\nBpmButtonSubmit.propTypes = propTypes;\nBpmButtonSubmit.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    size: \"lg\",\n    scrollY: 270,\n    isOne: false,\n    organrefCode:\"newdept\",\n    positonrefCode:\"newposition\",\n    roleRef:\"role_new_table\",\n    userRef:\"newuser\"\n}\nexport default BpmButtonSubmit;\n","/**\n * bpm 收回流程按钮\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { onRecall } from './common';\n\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    url: PropTypes.string,\n    data: PropTypes.array,\n    className: PropTypes.string,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmButtonRecall extends Component {\n    constructor() {\n        super();\n    }\n    /**\n     * 收回操作事件\n     */\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        let recallArray = [];\n        //操作数据至少有一个\n        if (checkedArray.length > 0) {\n            checkedArray.forEach(da => {\n                if (da.bpmState != 0 && da.bpmState != null) {\n                    recallArray.push({ id: da.id });\n                }else {\n                    onError && onError({\n                        type: 1,\n                        msg: `流程没有启动无法撤回`\n                    });\n                }\n            });\n        } else {\n            // 弹出提示请选择数据\n            onError && onError({\n                type: 1,\n                msg: `请选择单据才能撤回`\n            });\n            return;\n        }\n        if (recallArray.length > 0) {\n            onStart && onStart();\n            let { data: { success, detailMsg } } = await onRecall(this.props.url, recallArray);\n            if (detailMsg.data['success'] && detailMsg.data.success == 'success') {\n                onSuccess && onSuccess();\n            } else {\n                onError && onError({\n                    type: 2,\n                    msg: detailMsg.data.message\n                });\n            }\n        }\n    }\n    render() {\n        return (<span onClick={this.handlerBtn}>\n            {\n                this.props.children\n            }\n        </span>);\n    }\n}\nBpmButtonRecall.propTypes = propTypes;\nBpmButtonRecall.defaultProps = {\n    checkedArray: [],\n    url: \"/example/ygdemo_yw_info/unsubmit\",\n    data: [],\n    className: \"\"\n}\nexport default BpmButtonRecall;\n","/**\n * bpm 提交流程按钮\n */\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Button, Modal, Table } from 'tinper-bee';\nimport RefWithInput from 'yyuap-ref/dist2/refWithInput';\nimport { onCommit, queryBpmTemplateAllocate, reconvert } from './common';\nimport refOptions from './refOptions';\nconst propTypes = {\n    checkedArray: PropTypes.array,\n    funccode: PropTypes.string,\n    nodekey: PropTypes.string,\n    url: PropTypes.string,\n    urlAssignSubmit: PropTypes.string,\n    className: PropTypes.string,\n    filterRefUrl: PropTypes.string,\n    refCode: PropTypes.string,\n    scrollY: PropTypes.number,\n    onSuccess: PropTypes.func,\n    onError: PropTypes.func,\n    onStart: PropTypes.func,\n    onEnd: PropTypes.func\n};\n\nclass BpmLinkAssign extends Component {\n    constructor() {\n        super();\n        this.state = {\n            childRefKey: [],//参照组件选择的数据\n            userIds: [],\n            processDefineCode: \"\",\n            assignInfo: {\n                assignInfoItems: []\n            },\n            obj: {},//单据数据\n            huanjieShow: false,//环节指派显示\n            huanjieList: [\n                { \"id\": \"approveUserTask3283\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3183\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3a83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3s83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask32d3\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask3zza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTasqzza83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTask34za83\", \"name\": \"1\", \"type\": \"userTask\" },\n                { \"id\": \"approveUserTas43zza83\", \"name\": \"1\", \"type\": \"userTask\" }\n            ],\n            editRowIndex: 0,\n            showVal: []\n        }\n    }\n    //提交流程按钮\n    handlerBtn = async () => {\n        let { checkedArray, onStart, onEnd, onSuccess, onError } = this.props;\n        //检查只能一条单据提交流程\n        if (checkedArray.length >= 2) {\n            onError && onError({\n                type: 2,\n                msg: `请选择单条数据提交`\n            });\n            return;\n        }\n\n        //处理数据提交第一次请求，然后发起二次请求\n        if (checkedArray.length > 0) {\n            //如果传来的数据状态bpmState==null or 0 那么直接给出错误重复提交\n            if (checkedArray[0].bpmState >= 1) {\n                onError && onError({\n                    type: 1,\n                    msg: `不能提交此单据，重复提交`\n                });\n                return;\n            }\n            //加载事件\n            onStart && onStart();\n            //提交第一次请求，获得res_code通过funccode,nodekey\n            let { data: { success, detailMsg } } = await queryBpmTemplateAllocate({\n                funccode: this.props.funccode,\n                nodekey: this.props.nodekey\n            });\n            //正常拿到成功数据后\n            if (success == \"success\") {\n                //组织新的第二次提交参数，用于是否有流程指派操作等\n                let commitParam = {\n                    \"url\": this.props.url,\n                    \"processDefineCode\": detailMsg.data.res_code,\n                    \"submitArray\": checkedArray\n                }\n                //得到下次需要接口用的res_code\n                this.setState({\n                    processDefineCode: detailMsg.data.res_code\n                });\n                //收集参数准备提交submit\n                let result = await onCommit(commitParam);\n                let flag = result.data.success;\n                //一般普通的提交成功和失败\n                if (flag == \"success\" && (typeof result.data.detailMsg.data.assignAble == 'undefined')) {\n                    //正确\n                    onSuccess && onSuccess();\n                } else if (flag == \"fail_global\") {\n                    //后端错误\n                    onError && onError({\n                        type: 2,\n                        msg: reconvert(result.data.message) || '流程启动失败'\n                    });\n                }\n                //当得知需要二次弹出环节面板\n                if (result.data.detailMsg.data.assignAble == true) {\n                    //判断是否有最新的活动id和name\n                    if (result.data.detailMsg.data.assignedActivities && result.data.detailMsg.data.assignedActivities.length > 0) {\n                        //停止事件\n                        onEnd && onEnd();\n                        //更新环节指派数据\n                        this.setState({\n                            huanjieShow: true,\n                            huanjieList: result.data.detailMsg.data.assignedActivities,\n                            obj: checkedArray[0],\n                            assignInfo: {\n                                assignInfoItems: Array.from(result.data.detailMsg.data.assignedActivities, x => ({ activityId: x.id, activityName: x.name, participants: [] }))\n                            }\n                        });\n                    }\n                }\n            } else if (success == \"fail_global\") {\n                let { data: { message } } = result\n                //流程提交错误\n                onError && onError({\n                    type: 2,\n                    msg: reconvert(message) || '流程启动失败'\n                });\n            }\n        } else {\n            // 弹出提示\n            onError && onError({\n                type: 1,\n                msg: `请选择提交的单据`\n            });\n        }\n\n    }\n    //通用关闭方法\n    closeHuanjie = () => {\n        this.setState({\n            huanjieShow: false,\n            childRefKey: [],\n            showVal: []\n        });\n    }\n    //选择人员后的确定事件\n    signAddOK = () => {\n        //修改第几个数据\n        let _index = this.state.editRowIndex;\n        //副本原始对象\n        let sourseArray = this.state.assignInfo.assignInfoItems.slice();\n        //根据修改索引修改指定数据内容\n        sourseArray[_index]['participants'] = Array.from(this.state.userIds, x => ({ id: x.id }));\n        this.setState({\n            assignInfo: {\n                assignInfoItems: sourseArray\n            },\n            userIds: []\n        });\n    }\n    //选择完所有加签后的确定事件\n    huanjieHandlerOK = async () => {\n        let { urlAssignSubmit, onSuccess, onError, onStart, onEnd } = this.props;\n        let { processDefineCode, assignInfo, obj } = this.state;\n        //加载事件\n        onStart && onStart();\n        let result = await axios.post(urlAssignSubmit, {\n            processDefineCode,\n            assignInfo,\n            obj\n        }).catch((e) => {\n            onError && onError({\n                type: 2,\n                msg: `后台服务请求发生错误`\n            });\n        });\n        if (result.data.success == 'success') {\n            onSuccess && onSuccess();\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        } else if (result.data.success == 'fail_global') {\n            onError && onError({\n                type: 2,\n                msg: reconvert(result.data.message) || '流程启动失败'\n            });\n            this.setState({\n                huanjieShow: false,\n                childRefKey: [],\n                showVal: []\n            });\n        }\n    }\n    render() {\n        let self = this;\n        let huanjieCol = [{\n            title: \"名称\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: \"40%\"\n        },\n        {\n            title: \"编码\",\n            dataIndex: \"id\",\n            key: \"id\",\n            width: \"40%\"\n        }, {\n            title: \"指派\",\n            dataIndex: \"1\",\n            key: \"1\",\n            width: \"20%\",\n            render(text, record, index) {\n                return <RefWithInput disabled={false} option={Object.assign(JSON.parse(refOptions), {\n                    title: '人员选择',\n                    backdrop: false,\n                    hasPage: true,\n                    refType: 2,//1:树形 2.单表 3.树卡型 4.多选 5.default\n                    isRadio: false,\n                    filterRefUrl: self.props.filterRefUrl,\n                    className: '',\n                    param: {//url请求参数\n                        refCode: self.props.refCode,\n                        tenantId: '',\n                        sysId: '',\n                        transmitParam: 'EXAMPLE_CONTACTS,EXAMPLE_ORGANIZATION',\n                    },\n                    //选择中的数据\n                    keyList: self.state.childRefKey[index] || [],\n                    //保存回调sels选中的行数据showVal显示的字\n                    onSave: function (sels, showVal) {//showVal=\"12;13;管理员\"\n                        console.log(sels);\n                        var temp = sels.map(v => v.id);\n                        //显示值\n                        let _showVal = self.state.showVal.slice();\n                        _showVal[index] = showVal;\n                        //选中的值\n                        let _childRefKey = self.state.childRefKey.slice();\n                        _childRefKey[index] = temp;\n                        //副本原始对象\n                        let sourseArray = self.state.assignInfo.assignInfoItems.slice();\n                        //根据修改索引修改指定数据内容\n                        sourseArray[index]['participants'] = Array.from(_childRefKey[index], x => ({ id: x }));\n                        self.setState({\n                            childRefKey: _childRefKey,\n                            showVal: _showVal,\n                            assignInfo: {\n                                assignInfoItems: sourseArray\n                            }\n                        });\n                    },\n                    showVal: self.state.showVal[index],\n                    showKey: 'refname',\n                    verification: false\n                })} />\n            }\n        }]\n        return (<Table\n            loading={false}\n            scroll={{ y: this.props.scrollY }}\n            emptyText={() => (<span>暂无环节</span>)}\n            rowKey={record => record.id}\n            columns={huanjieCol}\n            data={this.state.huanjieList}\n        />);\n    }\n}\nBpmLinkAssign.propTypes = propTypes;\nBpmLinkAssign.defaultProps = {\n    checkedArray: [],\n    nodekey: \"003\",\n    funccode: \"react\",\n    url: \"/example/ygdemo_yw_info/submit\",\n    urlAssignSubmit: \"/example/ygdemo_yw_info/assignSubmit\",\n    className: \"\",\n    filterRefUrl: \"/iuap_pap_quickstart/common/filterRef\",\n    refCode: \"newuser\",\n    scrollY: 270\n}\nexport default BpmLinkAssign;\n","/**\n * bpm流程图组件\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst propTypes = {\n    url: PropTypes.string,\n    processDefinitionId: PropTypes.string,\n    processInstanceId: PropTypes.string,\n    width: PropTypes.string,\n    height: PropTypes.string\n};\n\nclass BpmFlowChart extends Component {\n    render() {\n        let { processDefinitionId, processInstanceId, width, height, url } = this.props;\n        return (\n            <div>\n                <iframe\n                    style={{ width, height, \"minHeight\": \"300px\" }}\n                    src={`${url}?processDefinitionId=${processDefinitionId}&processInstanceId=${processInstanceId}`}\n                    frameBorder=\"0\"\n                >\n                </iframe>\n            </div>\n        );\n    }\n}\nBpmFlowChart.propTypes = propTypes;\nBpmFlowChart.defaultProps = {\n    url: \"/eiap-plus/vendor/diagram-viewer/index.html\",\n    width: \"99%\",\n    height: \"300px\",\n    processDefinitionId: \"eiap508870:4:c3bc57e8-631a-11e8-8d04-0686c4000fcf\",\n    processInstanceId: \"d5c3ab59-631a-11e8-8d04-0686c4000fcf\"\n}\n\nexport default BpmFlowChart;"],"sourceRoot":""}